{
  "openapi": "3.1.0",
  "info": {
    "title": "siasn-jf",
    "version": "0.1.0",
    "description": "The SIASN manajemen JF backend provides API for the Manajemen JF dashboard.",
    "contact": {
      "name": "PotatoBeans Co.",
      "url": "https://potatobeans.id",
      "email": "sergioryan@potatobeans.id"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8080"
    }
  ],
  "paths": {
    "/activity/statistic/status/get": {
      "parameters": [],
      "get": {
        "summary": "Get the Statistics of Activity Request Statuses",
        "operationId": "get-activity-statistic-status-get",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatisticStatus"
                  }
                }
              }
            }
          }
        },
        "description": "This endpoint will return an array of statistics representing each status possible for an activity request an the number of request is in that status currently.",
        "tags": [
          "activity"
        ]
      }
    },
    "/activity/admission/submit": {
      "parameters": [],
      "post": {
        "summary": "Submit Activity/Event Admission",
        "operationId": "post-activity-admission-submit",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "activity_id": {
                      "type": "string",
                      "description": "A UUID generated for the activity that has been submitted."
                    }
                  },
                  "required": [
                    "activity_id"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\nNot all possible errors are displayed here.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                },
                "examples": {
                  "ErrCodeActivityAdmissionInsertAsnNotFound - 11401": {
                    "value": {
                      "code": 10401,
                      "message": "some ASNs cannot be found by the given NIP"
                    }
                  },
                  "ErrCodeActivityAdmissionInsertNoAttendees - 11402": {
                    "value": {
                      "code": 10402,
                      "message": "attendees NIP(s) are needed, either with old or new version NIP"
                    }
                  },
                  "ErrCodeActivityAdmissionInsertNameEmpty - 11403": {
                    "value": {
                      "code": 10403,
                      "message": "activity name is needed"
                    }
                  },
                  "ErrCodeActivityAdmissionInsertTypeInvalid - 11404": {
                    "value": {
                      "code": 10404,
                      "message": "activity type is invalid",
                      "cause": "..."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "description": "Submits a new activity/event admission. A single admission must contains the complete activity data, including the NIPs of the attendees and filenames given from uploading temporary support documents.\n\nSubmitting the admission will move support document files from temporary to permanent location. Only those files that have their filenames specified in `temp_dokumen_pendukung` are moved from temporary location. The filenames must match the names given to each file before uploading the files one by one. Endpoints such as this that require you to upload multiple files of the same kind require you to submit the filenames again. That's because you may not want all files to be saved to permanent locations, for example due to the user deleting some files that he/she just uploaded. Only the exact filenames that you supply are saved to the permanent locations. Temporary locations will be purged regularly.\n\nAttendees can be submitted via their new/old NIPs. It is better not to supply the same person twice using new and old NIP fields, although they technically refer to the same person and may not cause any trouble for now.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nama": {
                    "type": "string",
                    "description": "The event/activity name."
                  },
                  "jenis": {
                    "type": "integer",
                    "description": "Deprecated activity types:\n1: Workshop\n2: Bimtek\n3: Pelatihan\n4: Sertifikasi\n5: Akreditasi\n6: Uji Kompetensi Naik Jenjang\n7: Uji Kompetensi Peripindahan Jabatan\nNew Activity types:\n8: Pelatihan Fungsional\n9: Pelatihan Teknis\n10: Pelatihan Manajerial\n11: Pelatihan Sosio-kultural"
                  },
                  "deskripsi": {
                    "type": "string",
                    "description": "Activity description."
                  },
                  "tgl_mulai": {
                    "type": "string",
                    "description": "The activity start date, in ISO format: YYYY-MM-DD."
                  },
                  "tgl_selesai": {
                    "type": "string",
                    "description": "The activity end date, in ISO format: YYYY-MM-DD."
                  },
                  "jabatan_jenjang": {
                    "type": "string",
                    "description": "Position/grade specified. Must exist in the agency."
                  },
                  "data_tambahan": {
                    "type": "string",
                    "description": "Optional extra data that may not be used/displayed."
                  },
                  "temp_dokumen_pendukung": {
                    "type": "array",
                    "description": "Exact filenames for support documents and it's document name (human readable ones) that were uploaded to the temporary location using the upload endpoint.",
                    "items": {
                      "$ref": "#/components/schemas/Document"
                    }
                  },
                  "peserta_user_id": {
                    "type": "array",
                    "description": "An array of ASN UUIDs that will attend this activity/event.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "tahun_diklat": {
                    "type": "integer"
                  },
                  "durasi": {
                    "type": "integer"
                  },
                  "instansi_penyelenggara": {
                    "type": "string"
                  },
                  "no_usulan": {
                    "type": "string"
                  }
                },
                "required": [
                  "nama",
                  "jenis",
                  "deskripsi",
                  "tgl_mulai",
                  "tgl_selesai",
                  "jabatan_jenjang",
                  "temp_dokumen_pendukung",
                  "peserta_user_id",
                  "tahun_diklat",
                  "durasi",
                  "no_usulan"
                ]
              },
              "examples": {}
            }
          },
          "description": ""
        },
        "parameters": [],
        "tags": [
          "activity"
        ]
      }
    },
    "/activity/admission/upload": {
      "post": {
        "summary": "Upload a Single Activity Admission Support Document",
        "operationId": "post-activity-admission-upload",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "Make a PUT request with the file as request body to upload the file to the signed URL."
                    },
                    "filename": {
                      "type": "string",
                      "description": "The filename. Cache this filename for previewing and submitting."
                    }
                  },
                  "required": [
                    "url",
                    "filename"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "description": "You cannot upload an support doc directly to permanent location. It must first be in temporary location and will then be moved to permanent location after you submit the requirement admission. To start uploading this file, create a POST request to this URL and make a PUT request to the given URL.\n\nThe given filename is used for submitting and previewing. The filename is the filename that is stored in object storage, so you will need it for previewing and submitting the admission.\n\nFor this you also have to submit the MIME type of the file you want to upload. The API will check if the type is allowed and will generate a filename according to the MIME type.\n\nOnly these are allowed:\napplication/pdf => .pdf\napplication/vnd.openxmlformats-officedocument.spreadsheetml.sheet => .xlsx\napplication/vnd.ms-excel => .xls\napplication/vnd.openxmlformats-officedocument.wordprocessingm => .docx\napplication/msword => .doc",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "mime_type": {
                    "type": "string",
                    "description": "The MIME type of the file you want to upload. The generated filename has extension that depends on the MIME type."
                  }
                },
                "required": [
                  "mime_type"
                ]
              }
            }
          }
        },
        "tags": [
          "activity"
        ]
      }
    },
    "/activity/admission/preview": {
      "get": {
        "summary": "Preview an Activity Admission Support Document",
        "tags": [
          "activity"
        ],
        "responses": {
          "302": {
            "description": "Found",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "operationId": "get-activity-admission-preview",
        "description": "The preview endpoints will redirect you with 302 to the signed URL. The preview endpoints like this require a filename which was generated by the upload endpoint.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "filename",
            "required": true,
            "description": "The filename generated by the upload endpoint when uploading the file."
          }
        ]
      }
    },
    "/activity/admission/download": {
      "get": {
        "summary": "Download an Activity Admission Support Document",
        "tags": [
          "activity"
        ],
        "operationId": "get-activity-admission-download",
        "description": "The download endpoints will redirect you with 302 to the signed URL. The download endpoints like this require a filename that was supplied for upload, and was returned by the /detail endpoint.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "filename",
            "required": true,
            "description": "The filename generated by the upload endpoint when uploading the file."
          }
        ],
        "responses": {
          "302": {
            "description": "Found",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        }
      }
    },
    "/activity/admission/search-asn": {
      "get": {
        "summary": "Search ASN Based on NIP",
        "tags": [
          "activity"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASN"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "operationId": "get-activity-admission-search-asn",
        "description": "Search ASN based on NIP, treated as new and old NIP.\nWhen there are two matches found, one by new and one for old NIP match, the one that match the new NIP is chosen. This deprecates search endpoints which differentiate new and old NIPs search. May return 404 if the ASN cannot be found.\n\nThe searched ASN is searched based on the logged in user work agency ID. So even if the NIP can be found, it may be reported as not found if the ASN work outside the logged in user agency. This means the user can only search for ASNs in the user work agency only.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "nip",
            "description": "The ASN new or old NIP.",
            "required": true
          }
        ]
      }
    },
    "/activity/admission/search-asn/new": {
      "get": {
        "summary": "Search ASN Based on New NIP",
        "tags": [
          "activity"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASN"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "operationId": "get-activity-admission-search-asn-new",
        "description": "Deprecated, use /activity/admission/search-asn instead, as this endpoint now does exactly the same as that endpoint.",
        "deprecated": true,
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "nip_baru",
            "description": "The ASN new NIP.",
            "required": true
          }
        ]
      }
    },
    "/activity/admission/search-asn/old": {
      "get": {
        "summary": "Search ASN Based on Old NIP",
        "tags": [
          "activity"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASN"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "operationId": "get-activity-admission-search-asn-old",
        "description": "Deprecated, use /activity/admission/search-asn instead, as this endpoint now does exactly the same as that endpoint.",
        "deprecated": true,
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "nip_lama",
            "description": "The ASN old NIP.",
            "required": true
          }
        ]
      }
    },
    "/activity/admission/search": {
      "get": {
        "summary": "Search Activity Admission Entries",
        "tags": [
          "activity"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActivityAdmission"
                  }
                },
                "examples": {}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                },
                "examples": {
                  "ErrCodeFilterStatusInvalid - 15401": {
                    "value": {
                      "code": 15401,
                      "message": "admission status must be >= 1 and <= 5)"
                    }
                  },
                  "ErrCodeFilterInvalidDate - 15402": {
                    "value": {
                      "code": 15402,
                      "message": "date must be in the format of YYYY-MM-DD (e.g. 2006-12-31)"
                    }
                  },
                  "ErrCodeFilterInvalidType - 15403": {
                    "value": {
                      "code": 15403,
                      "message": "type (jenis_kegiatan) must be >= 1 and <= 7"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-activity-admission-search",
        "description": "Search for a list of activity admissions based on the users work agency (instansi kerja) ID.\n\nAdditional filters can be provided to filter the search by the activity admission status or admission date.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "tgl_usulan",
            "description": "The date of admission with a format of YYYY-MM-DD (e.g. 2006-12-31)"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "status",
            "description": "1:Pengusulan (Aksi: Lihat), 2:Disetujui  - Belum Terbit Sertifikat (Aksi : Lihat, Ajukan Sertifikat), 3:Disetujui – Ajukan Sertifikat (Aksi : Lihat), 4: Disetujui - Sudah Terbit Sertifikat (Aksi : Lihat), 5: Ditolak (Aksi: Lihat)"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "jenis_kegiatan",
            "description": "1:Workshop, 2:bimtek, 3:pelatihan, 4:sertifikasi jabatan fungsional, 5:akreditasi, 6:uji kompetensi naik jenjang, 7:uji kompetensi perpindahan jabatan"
          }
        ]
      }
    },
    "/activity/admission/search/paginated": {
      "get": {
        "summary": "Search Activity Admission Entries",
        "tags": [
          "activity"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ActivityAdmission"
                      }
                    },
                    "metadata": {
                      "$ref": "#/components/schemas/PaginatedListMetadata"
                    }
                  },
                  "required": [
                    "data",
                    "metadata"
                  ]
                },
                "examples": {}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                },
                "examples": {
                  "ErrCodeFilterStatusInvalid - 15401": {
                    "value": {
                      "code": 15401,
                      "message": "admission status must be >= 1 and <= 5)"
                    }
                  },
                  "ErrCodeFilterInvalidDate - 15402": {
                    "value": {
                      "code": 15402,
                      "message": "date must be in the format of YYYY-MM-DD (e.g. 2006-12-31)"
                    }
                  },
                  "ErrCodeFilterInvalidType - 15403": {
                    "value": {
                      "code": 15403,
                      "message": "type (jenis_kegiatan) must be >= 1 and <= 7"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-activity-admission-search-paginated",
        "description": "Search for a list of activity admissions based on the users work agency (instansi kerja) ID.\n\nAdditional filters can be provided to filter the search by the activity admission status or admission date.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "tgl_usulan",
            "description": "The date of admission with a format of YYYY-MM-DD (e.g. 2006-12-31)"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "status",
            "description": "1:Pengusulan (Aksi: Lihat), 2:Disetujui  - Belum Terbit Sertifikat (Aksi : Lihat, Ajukan Sertifikat), 3:Disetujui – Ajukan Sertifikat (Aksi : Lihat), 4: Disetujui - Sudah Terbit Sertifikat (Aksi : Lihat), 5: Ditolak (Aksi: Lihat)"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "jenis_kegiatan",
            "description": "1:Workshop, 2:bimtek, 3:pelatihan, 4:sertifikasi jabatan fungsional, 5:akreditasi, 6:uji kompetensi naik jenjang, 7:uji kompetensi perpindahan jabatan"
          },
          {
            "$ref": "#/components/parameters/halaman"
          },
          {
            "$ref": "#/components/parameters/jumlah_per_halaman"
          }
        ]
      }
    },
    "/activity/admission/search-pembina": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [
          "activity"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActivityAdmission"
                  }
                },
                "examples": {}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                },
                "examples": {
                  "ErrCodeFilterStatusInvalid - 15401": {
                    "value": {
                      "code": 15401,
                      "message": "admission status must be >= 1 and <= 5)"
                    }
                  },
                  "ErrCodeFilterInvalidDate - 15402": {
                    "value": {
                      "code": 15402,
                      "message": "date must be in the format of YYYY-MM-DD (e.g. 2006-12-31)"
                    }
                  },
                  "ErrCodeFilterInvalidAgencyId - 15404": {
                    "value": {
                      "code": 15404,
                      "message": "agency id (instansi_id) cannot be empty"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-activity-admission-search-pembina",
        "description": "Search for a list of activity admissions based on the work agency (instansi kerja) ID supplied a 'pembina' user.\n\nAdditional filters can be provided to filter the search by the activity admission status or admission date.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "tgl_usulan",
            "description": "The date of admission with a format of YYYY-MM-DD (e.g. 2006-12-31)"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "status",
            "description": "1:Pengusulan (Aksi: Lihat), 2:Disetujui  - Belum Terbit Sertifikat (Aksi : Lihat, Ajukan Sertifikat), 3:Disetujui – Ajukan Sertifikat (Aksi : Lihat), 4: Disetujui - Sudah Terbit Sertifikat (Aksi : Lihat), 5: Ditolak (Aksi: Lihat)"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "jenis_kegiatan",
            "description": "1:Workshop, 2:bimtek, 3:pelatihan, 4:sertifikasi jabatan fungsional, 5:akreditasi, 6:uji kompetensi naik jenjang, 7:uji kompetensi perpindahan jabatan"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "instansi_id",
            "description": "The ID of instansi to search for"
          }
        ]
      }
    },
    "/activity/admission/verify": {
      "post": {
        "summary": "Set an Activity Status to Accepted",
        "operationId": "post-activity-admission-verify",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "kegiatan_id": {
                      "type": "string",
                      "description": "The same activity UUID that has been modified."
                    },
                    "modified_at": {
                      "type": "integer",
                      "description": "UNIX epoch timestamp (in seconds)."
                    }
                  },
                  "required": [
                    "kegiatan_id",
                    "modified_at"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                },
                "examples": {
                  "ErrCodeUuidInvalid - 10418": {
                    "value": {
                      "code": 10418,
                      "message": "not a valid UUID string"
                    }
                  },
                  "ErrCodeActivityVerificationStatusProcessedFurther- 13401": {
                    "value": {
                      "code": 13401,
                      "message": "cannot set activity status to accepted, activity already processed further"
                    }
                  },
                  "ErrCodeActivityVerificationStatusAlreadyAccepted - 13402": {
                    "value": {
                      "code": 13402,
                      "message": "this activity is already accepted"
                    }
                  },
                  "ErrCodeActivityAdmissionInsertNoAttendees - 13403": {
                    "value": {
                      "code": 13403,
                      "message": "no attendees supplied"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                },
                "examples": {
                  "ErrCodeEntryNotFound - 10417": {
                    "value": {
                      "code": 10417,
                      "message": "entry cannot be found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "description": "Set an event/activity status to accepted. Will return 400 if activity already accepted, or the activity status is not created. Will also return 404 if the activity ID cannot be found.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityVerification"
              }
            }
          }
        },
        "tags": [
          "activity"
        ]
      }
    },
    "/activity/admission/get": {
      "get": {
        "summary": "Get Admission Detail",
        "tags": [
          "activity"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityAdmissionDetail"
                }
              }
            }
          }
        },
        "operationId": "get-activity-admission-get",
        "description": "Get an activity admission detail based on the admission ID.\n\nThis endpoint will allow 'pembina' user to access all admission while only allowing other agency to only access activity admission made for that agency.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "kegiatan_id",
            "required": true
          }
        ]
      },
      "parameters": []
    },
    "/activity/admission/upload/recommendation-letter": {
      "post": {
        "summary": "Uploads Recommendation Letter to Temporary Location",
        "operationId": "post-activity-admission-upload-recommendation-letter",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "url"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "description": "You cannot upload a recommendation letter directly to permanent location. It must first be in temporary location and will then be moved to permanent location after you submit the requirement verification. To start uploading this file, create a POST request to this URL and make a PUT request to the given URL.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "kegiatan_id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "description": ""
        },
        "deprecated": true,
        "tags": [
          "activity"
        ]
      },
      "parameters": []
    },
    "/activity/admission/preview/recommendation-letter": {
      "get": {
        "summary": "Preview Temporary Recommendation Letter",
        "tags": [
          "activity"
        ],
        "operationId": "get-activity-admission-preview-recommendation-letter",
        "description": "The preview endpoints will redirect you with 302 to the signed URL. The filename is generated from the given kegiatan_id.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "kegiatan_id",
            "required": true,
            "description": "The activity ID"
          }
        ],
        "responses": {
          "302": {
            "description": "Found",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "deprecated": true
      },
      "parameters": []
    },
    "/activity/admission/download/recommendation-letter": {
      "get": {
        "summary": "Download Recommendation Letter",
        "tags": [
          "activity"
        ],
        "operationId": "get-activity-admission-download-recommendation-letter",
        "description": "The download endpoints will redirect you with 302 to the signed URL, pointing to permanent file location. The filename is generated from the given kegiatan_id.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "kegiatan_id",
            "required": true,
            "description": "The activity ID"
          }
        ],
        "responses": {
          "302": {
            "description": "Found",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "deprecated": true
      },
      "parameters": []
    },
    "/activity/admission/submit/recommendation-letter": {
      "parameters": [],
      "post": {
        "summary": "Submit Activity Recommendation Letter",
        "operationId": "post-activity-admission-submit-recommendation-letter",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "kegiatan_id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "kegiatan_id"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "description": "Recommendation letter must be uploaded previously.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "kegiatan_id": {
                    "type": "string"
                  },
                  "surat_rekomendasi": {
                    "type": "object",
                    "required": [
                      "no_dokumen",
                      "tgl_dokumen",
                      "nama_dokumen"
                    ],
                    "properties": {
                      "no_dokumen": {
                        "type": "string"
                      },
                      "tgl_dokumen": {
                        "type": "string"
                      },
                      "nama_dokumen": {
                        "type": "string"
                      }
                    }
                  },
                  "ttd_user_id": {
                    "type": "string",
                    "deprecated": true
                  }
                },
                "required": [
                  "kegiatan_id",
                  "surat_rekomendasi",
                  "ttd_user_id"
                ]
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "activity"
        ]
      }
    },
    "/activity/csr/submit": {
      "post": {
        "summary": "Set an Activity Status to Certificate Request",
        "operationId": "post-activity-csr-set",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "activity_id": {
                      "type": "string",
                      "description": "The same activity UUID that has been modified."
                    },
                    "modified_at": {
                      "type": "integer",
                      "description": "UNIX epoch timestamp (in seconds)."
                    }
                  },
                  "required": [
                    "activity_id",
                    "modified_at"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                },
                "examples": {
                  "ErrCodeUuidInvalid - 10418": {
                    "value": {
                      "code": 10418,
                      "message": "not a valid UUID string"
                    }
                  },
                  "ErrCodeActivityCsrStatusSetNotAccepted - 12401": {
                    "value": {
                      "code": 12401,
                      "message": "cannot set activity status to certificate request, activity is not accepted yet"
                    }
                  },
                  "ErrCodeActivityCsrStatusSetOngoing - 12402": {
                    "value": {
                      "code": 12402,
                      "message": "certificate request is already ongoing for this activity"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                },
                "examples": {
                  "ErrCodeEntryNotFound - 10417": {
                    "value": {
                      "code": 10417,
                      "message": "entry cannot be found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "description": "Set an event/activity admission status to certificate request. Will return 400 if certificate has been requested, or the activity is not accepted. Will also return 404 if the activity ID cannot be found.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "kegiatan_id": {
                    "type": "string",
                    "description": "Activity UUID."
                  },
                  "kelulusan_peserta": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "user_id": {
                          "type": "string"
                        },
                        "kelulusan": {
                          "type": "boolean"
                        },
                        "alasan_ditolak": {
                          "type": "string",
                          "description": "Will be ignored if kelulusan = true."
                        }
                      },
                      "required": [
                        "user_id",
                        "kelulusan"
                      ]
                    }
                  }
                },
                "required": [
                  "kegiatan_id",
                  "kelulusan_peserta"
                ]
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "activity"
        ]
      },
      "parameters": []
    },
    "/activity/certgen/submit": {
      "post": {
        "summary": "Submit Activity Certificates",
        "operationId": "post-activity-certgen-submit",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "kegiatan_id": {
                      "type": "string"
                    },
                    "modified_at": {
                      "type": "integer",
                      "description": "Modified at timestamp in UNIX epoch seconds."
                    }
                  },
                  "required": [
                    "kegiatan_id",
                    "modified_at"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                },
                "examples": {
                  "ErrCodeActivityCertSubmitNotRequested - 14401": {
                    "value": {
                      "code": 14401,
                      "message": "activity admission status is not certificate request"
                    }
                  },
                  "ErrCodeActivityCertSubmitPakUnsupported - 14402": {
                    "value": {
                      "code": 14402,
                      "message": "PAK document is supported only for uji kompetensi perpindahan jabatan"
                    }
                  },
                  "ErrCodeActivityCertSubmitNoDocs - 14403": {
                    "value": {
                      "code": 14403,
                      "message": "no documents were uploaded"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.\n5xx errors do not have error cause. They are hidden and can only be seen through the service logs.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                },
                "examples": {
                  "ErrCodeStorageCopyFail - 10508": {
                    "value": {
                      "code": 10508,
                      "message": "copying (or moving + deleting) files in object storage failed"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Submit certificates and PAK documents. This may return some common errors for example 404 when the activity cannot be found. The submitted certificates/PAKs must have already existed in object storage temporary location. The PAK document is available only if the activity type is uji kompetensi perpindahan jabatan.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "kegiatan_id": {
                    "type": "string",
                    "description": "The UUID of the activity."
                  },
                  "kelulusan_peserta": {
                    "type": "array",
                    "description": "A list of certificates/PAK documents.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "no_surat": {
                          "type": "string",
                          "description": "The letter number."
                        },
                        "tgl_surat": {
                          "type": "string",
                          "description": "Letter date, in YYYY-MM-DD."
                        },
                        "peserta_user_id": {
                          "type": "string",
                          "description": "The ASN hexadecimal ID of whom this certificate/PAK is issued for."
                        },
                        "jenis": {
                          "type": "string",
                          "description": "1 for certificate, 2 for PAK. PAK can only be submitted for uji kompetensi perpindahan jabatan."
                        },
                        "nilai": {
                          "type": "number"
                        },
                        "kelulusan": {
                          "type": "boolean"
                        },
                        "alasan_tidak_lulus": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "no_surat",
                        "tgl_surat",
                        "peserta_user_id",
                        "jenis",
                        "kelulusan"
                      ]
                    }
                  }
                },
                "required": [
                  "kegiatan_id",
                  "kelulusan_peserta"
                ]
              }
            }
          }
        },
        "tags": [
          "activity"
        ]
      }
    },
    "/activity/certgen/upload": {
      "post": {
        "summary": "Upload a Single Activity Certificate/PAK",
        "operationId": "post-activity-certgen-upload-redirect",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "Make a PUT request with the file as request body to upload the file to the signed URL."
                    }
                  },
                  "required": [
                    "url"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                },
                "examples": {
                  "ErrCodeActivityCertSubmitNotRequested - 14401": {
                    "value": {
                      "code": 14401,
                      "message": "activity admission status is not certificate request"
                    }
                  },
                  "ErrCodeActivityCertSubmitPakUnsupported - 14402": {
                    "value": {
                      "code": 14402,
                      "message": "PAK document is supported only for uji kompetensi perpindahan jabatan"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "description": "Upload a single certificate/PAK document. Will return 400 if the activity status is not certificate request. This endpoint will redirect you with 307 to the object storage upload signed URL.\nThe redirect must be requested with PUT request and with the file as request body as bytes stream.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "kegiatan_id",
            "description": "The activity UUID.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "peserta_user_id",
            "description": "The ASN UUID of whom this certificate/PAK is associated with.",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "jenis",
            "description": "1 = certificate, 2 = PAK. PAK is only available for uji kompetensi perpindahan jabatan.",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          "description": "The file as byte stream."
        },
        "deprecated": true,
        "tags": [
          "activity"
        ]
      },
      "parameters": []
    },
    "/activity/certgen/preview": {
      "get": {
        "summary": "Download Certificate/PAK Preview",
        "tags": [
          "activity"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "operationId": "get-activity-certgen-preview",
        "description": "This endpoint will redirect you to the object storage signed URL. If after redirect you get a 404 error, that means the file does not exist. You can also get 404 error before redirect, in which you should treat it as like the file does not exist.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "kegiatan_id",
            "required": true,
            "description": "The activity UUID."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "peserta_user_id",
            "required": true,
            "description": "The ASN UUID of whom this certificate/PAK is associated with."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "jenis",
            "required": true,
            "description": "1 = certificate, 2 = PAK. PAK is only available for uji kompetensi perpindahan jabatan."
          }
        ],
        "deprecated": true
      }
    },
    "/activity/certgen/download": {
      "get": {
        "summary": "Download Certificate/PAK",
        "tags": [
          "activity"
        ],
        "operationId": "get-activity-certgen-download",
        "description": "This endpoint will redirect you to the object storage signed URL. If after redirect you get a 404 error, that means the file does not exist. You can also get 404 error before redirect, in which you should treat it as like the file does not exist.\n\nPAK type has been removed.\n\n`force` can be set to true to force regenerating the certificate. Otherwise it will only regenerate the certificate once, as long as it is not already found in the object storage. Setting `force` to true will probably make the download starts significantly longer.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "kegiatan_id",
            "required": true,
            "description": "The activity UUID."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "peserta_user_id",
            "required": true,
            "description": "The ASN UUID of whom this certificate/PAK is associated with."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "force",
            "description": "true/false, set to true to force regenerate the document every time"
          }
        ],
        "responses": {
          "302": {
            "description": "Found",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        }
      }
    },
    "/requirement/statistic/status/get": {
      "parameters": [],
      "get": {
        "summary": "Get the Statistics of Requirement Request Statuses",
        "operationId": "get-requirement-statistic-status-get",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatisticStatus"
                  }
                }
              }
            }
          }
        },
        "description": "This endpoint will return an array of statistics representing each status possible for an requirement request an the number of request is in that status currently.",
        "tags": [
          "requirement"
        ]
      }
    },
    "/requirement/admission/submit": {
      "post": {
        "summary": "Submit Requirement Admission",
        "operationId": "post-requirement-admission-submit",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "kebutuhan_id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "kebutuhan_id"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "description": "Submits a new requirement admission. A single admission must contains the complete admission data, estimation document filenames given from uploading temporary support documents.\n\nSubmitting the admission will move support document files from temporary to permanent location. Only those files that have their filenames specified in `temp_dokumen_perhitungan` are moved from temporary location. The filenames must match the names given to each file before uploading the files one by one. Endpoints such as this that require you to upload multiple files of the same kind require you to submit the filenames again. That's because you may not want all files to be saved to permanent locations, for example due to the user deleting some files that he/she just uploaded. Only the exact filenames that you supply are saved to the permanent locations. Temporary locations will be purged regularly.\n\nJust like `temp_dokumen_perhitungan`, you need to submit the cover letter (surat pengantar) exact filename that was given to you for upload. That's because we cannot directly point out which cover letter file to save, as requirement admission ID has not been generated before you submit a new admission request, even though it is always a PDF file and is one-to-one associated with the requirement admission.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "jabatan_jenjang": {
                    "type": "string",
                    "description": "The ID for jabatan jenjang."
                  },
                  "jumlah_kebutuhan": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/RequirementCount"
                    }
                  },
                  "temp_surat_pengantar": {
                    "type": "string"
                  },
                  "temp_dokumen_perhitungan": {
                    "type": "array",
                    "description": "Exact filenames for estimation documents (dokument perhitungan) and it's document name (human readable ones) that were uploaded to the temporary location using the upload endpoint.",
                    "items": {
                      "$ref": "#/components/schemas/Document"
                    }
                  },
                  "tahun_anggaran": {
                    "type": "string"
                  },
                  "no_usulan": {
                    "type": "string"
                  }
                },
                "required": [
                  "jabatan_jenjang",
                  "jumlah_kebutuhan",
                  "temp_surat_pengantar",
                  "temp_dokumen_perhitungan",
                  "tahun_anggaran",
                  "no_usulan"
                ]
              }
            }
          }
        },
        "tags": [
          "requirement"
        ]
      }
    },
    "/requirement/template/cover-letter": {
      "get": {
        "summary": "Download Cover Letter Template",
        "tags": [
          "requirement"
        ],
        "operationId": "get-requirement-template-cover-letter",
        "description": "The download endpoints will redirect you with 302 to the signed URL.",
        "parameters": [],
        "responses": {
          "302": {
            "description": "Found",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/requirement/admission/upload/cover-letter": {
      "post": {
        "summary": "Uploads Cover Letter to Temporary Location",
        "operationId": "post-requirement-admission-upload-cover-letter",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "Make a PUT request with the file as request body to upload the file to the signed URL."
                    },
                    "filename": {
                      "type": "string",
                      "description": "The filename. Cache this filename for previewing and submitting."
                    }
                  },
                  "required": [
                    "url",
                    "filename"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "description": "You cannot upload a cover letter directly to permanent location. It must first be in temporary location and will then be moved to permanent location after you submit the requirement admission. To start uploading this file, create a POST request to this URL and make a PUT request to the given URL.\n\nThe given filename is used for submitting and previewing. The filename is the filename that is stored in object storage, so you will need it for previewing and when submitting the admission.",
        "tags": [
          "requirement"
        ]
      }
    },
    "/requirement/admission/upload/estimation": {
      "post": {
        "summary": "Uploads Estimation Doc to Temporary Location",
        "operationId": "post-requirement-admission-upload-estimation-doc",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "Make a PUT request with the file as request body to upload the file to the signed URL."
                    },
                    "filename": {
                      "type": "string",
                      "description": "The filename. Cache this filename for previewing and submitting."
                    }
                  },
                  "required": [
                    "url",
                    "filename"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "description": "You cannot upload an estimation doc directly to permanent location. It must first be in temporary location and will then be moved to permanent location after you submit the requirement admission. To start uploading this file, create a POST request to this URL and make a PUT request to the given URL.\n\nThe given filename is used for submitting and previewing. The filename is the filename that is stored in object storage, so you will need it for previewing and when submitting the admission.\n\nFor this you also have to submit the MIME type of the file you want to upload. The API will check if the type is allowed and will generate a filename according to the MIME type.\n\nOnly these are allowed:\napplication/pdf => .pdf\napplication/vnd.openxmlformats-officedocument.spreadsheetml.sheet => .xlsx\napplication/vnd.ms-excel => .xls\napplication/vnd.openxmlformats-officedocument.wordprocessingm => .docx\napplication/msword => .doc",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "mime_type": {
                    "type": "string",
                    "description": "The MIME type of the file you want to upload. The generated filename has extension that depends on the MIME type."
                  }
                },
                "required": [
                  "mime_type"
                ]
              }
            }
          }
        },
        "tags": [
          "requirement"
        ]
      },
      "parameters": []
    },
    "/requirement/admission/preview/cover-letter": {
      "get": {
        "summary": "Preview Temporary Cover Letter",
        "tags": [
          "requirement"
        ],
        "operationId": "get-requirement-admission-preview-cover-letter",
        "description": "The preview endpoints will redirect you with 302 to the signed URL. The preview endpoints like this require a filename which was generated by the upload endpoint.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "filename",
            "required": true,
            "description": "The filename generated by the upload endpoint when uploading the file."
          }
        ],
        "responses": {
          "302": {
            "description": "Found",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        }
      }
    },
    "/requirement/admission/edit": {
      "put": {
        "summary": "Submit Requirement Admission",
        "operationId": "put-requirement-admission-edit",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "kebutuhan_id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "kebutuhan_id"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "description": "Edits an existing requirement admission. A single admission must contain the complete admission data from the existing admission plus the changes.\n\nThis endpoint will overwrite the existing admission data except the estimation documents which instead are appended to the existing list of documents. Also if no cover letter is provided then it is assumed there are no changes to the cover letter and therefore the previous cover letter is retained.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "kebutuhan_id": {
                    "type": "string"
                  },
                  "jabatan_jenjang": {
                    "type": "string",
                    "description": "The ID for jabatan jenjang."
                  },
                  "jumlah_kebutuhan": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/RequirementCount"
                    }
                  },
                  "temp_surat_pengantar": {
                    "$ref": "#/components/schemas/Document"
                  },
                  "temp_dokumen_perhitungan": {
                    "type": "array",
                    "description": "Exact filenames for estimation documents (dokument perhitungan) and it's document name (human readable ones) that were uploaded to the temporary location using the upload endpoint.",
                    "items": {
                      "$ref": "#/components/schemas/Document"
                    }
                  },
                  "tahun_anggaran": {
                    "type": "string"
                  },
                  "no_usulan": {
                    "type": "string"
                  }
                },
                "required": [
                  "kebutuhan_id",
                  "jabatan_jenjang",
                  "jumlah_kebutuhan",
                  "tahun_anggaran",
                  "no_usulan"
                ]
              }
            }
          }
        },
        "tags": [
          "requirement"
        ]
      },
      "parameters": []
    },
    "/requirement/admission/preview/estimation": {
      "get": {
        "summary": "Preview Temporary Estimation Doc",
        "tags": [
          "requirement"
        ],
        "responses": {
          "302": {
            "description": "Found",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "operationId": "get-requirement-admission-preview-estimation-doc",
        "description": "The preview endpoints will redirect you with 302 to the signed URL. The preview endpoints like this require a filename which was generated by the upload endpoint.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "filename",
            "description": "The filename generated by the upload endpoint when uploading the file.",
            "required": true
          }
        ]
      },
      "parameters": []
    },
    "/requirement/admission/download/cover-letter": {
      "get": {
        "summary": "Download Cover Letter",
        "tags": [
          "requirement"
        ],
        "operationId": "get-requirement-admission-download-cover-letter",
        "description": "The download endpoints will redirect you with 302 to the signed URL. The download endpoints like this require a requirement id related to this the cover letter.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "kebutuhan_id",
            "required": true,
            "description": "The ID of requirement associated with the cover letter"
          }
        ],
        "responses": {
          "302": {
            "description": "Found",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/requirement/admission/template/cover-letter": {
      "get": {
        "summary": "Download Cover Letter Template",
        "tags": [
          "requirement"
        ],
        "operationId": "get-requirement-admission-template-cover-letter",
        "description": "The download endpoints will redirect you with 302 to the signed URL. The download endpoints like this require a requirement id related to this the cover letter.",
        "parameters": [],
        "responses": {
          "302": {
            "description": "Found",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/requirement/admission/download/estimation": {
      "get": {
        "summary": "Download Estimation Doc",
        "tags": [
          "requirement"
        ],
        "responses": {
          "302": {
            "description": "Found",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "operationId": "get-requirement-admission-download-estimation-doc",
        "description": "The preview endpoints will redirect you with 302 to the signed URL. The preview endpoints like this require a filename of the document",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "filename",
            "description": "The filename generated by the upload endpoint when uploading the file.",
            "required": true
          }
        ]
      },
      "parameters": []
    },
    "/requirement/admission/search": {
      "get": {
        "summary": "List All Requirement Admissions",
        "tags": [
          "requirement"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RequirementAdmissionResult"
                  }
                },
                "examples": {}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                },
                "examples": {
                  "ErrCodeFilterStatusInvalid - 17401": {
                    "value": {
                      "code": 17401,
                      "message": "admission status must be >= 1 and <= 5)"
                    }
                  },
                  "ErrCodeFilterInvalidDate - 17402": {
                    "value": {
                      "code": 17402,
                      "message": "date must be in the format of YYYY-MM-DD (e.g. 2006-12-31)"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-requirement-admission-search",
        "description": "Search for a list of requirement admissions based on the users work agency (instansi kerja) ID.\n\nAdditional filters can be provided to filter the search by the requirement admission status or admission date.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "tgl_usulan",
            "description": "The date of admission with a format of YYYY-MM-DD (e.g. 2006-12-31)"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "status",
            "description": "1: Pengusulan (Aksi: Lihat), 2: Pengusulan - Sudah Ditandatangani (Aksi : Lihat), 3: Perbaikan (Aksi : Lihat, Perbaiki), 4: Disetujui (Aksi : Lihat), 5: Ditolak (Aksi: Lihat)"
          }
        ]
      }
    },
    "/requirement/admission/search/paginated": {
      "get": {
        "summary": "List All Requirement Admissions",
        "tags": [
          "requirement"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RequirementAdmissionResult"
                      }
                    },
                    "metadata": {
                      "$ref": "#/components/schemas/PaginatedListMetadata"
                    }
                  },
                  "required": [
                    "data",
                    "metadata"
                  ]
                },
                "examples": {}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                },
                "examples": {
                  "ErrCodeFilterStatusInvalid - 17401": {
                    "value": {
                      "code": 17401,
                      "message": "admission status must be >= 1 and <= 5)"
                    }
                  },
                  "ErrCodeFilterInvalidDate - 17402": {
                    "value": {
                      "code": 17402,
                      "message": "date must be in the format of YYYY-MM-DD (e.g. 2006-12-31)"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-requirement-admission-search-paginated",
        "description": "Search for a list of requirement admissions based on the users work agency (instansi kerja) ID.\n\nAdditional filters can be provided to filter the search by the requirement admission status or admission date.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "tgl_usulan",
            "description": "The date of admission with a format of YYYY-MM-DD (e.g. 2006-12-31)"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "status",
            "description": "1: Pengusulan (Aksi: Lihat), 2: Pengusulan - Sudah Ditandatangani (Aksi : Lihat), 3: Perbaikan (Aksi : Lihat, Perbaiki), 4: Disetujui (Aksi : Lihat), 5: Ditolak (Aksi: Lihat)"
          },
          {
            "$ref": "#/components/parameters/halaman"
          },
          {
            "$ref": "#/components/parameters/jumlah_per_halaman"
          }
        ]
      }
    },
    "/requirement/admission/get": {
      "get": {
        "summary": "Get Detail of Requirement Admission",
        "tags": [
          "requirement"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequirementAdmissionDetail"
                }
              }
            }
          }
        },
        "operationId": "get-requirement-admission-detail",
        "description": "Get detail of an requirement admission with matched id.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "kebutuhan_id",
            "description": "the id of the requirement admission"
          }
        ]
      },
      "parameters": []
    },
    "/requirement/verify/submit": {
      "post": {
        "summary": "Set a Requirement Status to Accepted",
        "operationId": "post-requirement-admission-verify",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "kebutuhan_id": {
                      "type": "string",
                      "description": "The same requirement UUID that has been modified."
                    },
                    "modified_at": {
                      "type": "integer",
                      "description": "UNIX epoch timestamp (in seconds)."
                    }
                  },
                  "required": [
                    "kebutuhan_id",
                    "modified_at"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                },
                "examples": {
                  "ErrCodeUuidInvalid - 10418": {
                    "value": {
                      "code": 10418,
                      "message": "not a valid UUID string"
                    }
                  },
                  "ErrCodeRequirementVerificationStatusProcessedFurther- 18401": {
                    "value": {
                      "code": 18401,
                      "message": "cannot set requirement status to accepted, requirement already processed further"
                    }
                  },
                  "ErrCodeRequirementVerificationStatusAlreadyAccepted - 18402": {
                    "value": {
                      "code": 18402,
                      "message": "this requirement is already accepted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                },
                "examples": {
                  "ErrCodeEntryNotFound - 10417": {
                    "value": {
                      "code": 10417,
                      "message": "entry cannot be found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "description": "Set a requirement status to accepted. Will return 400 if requirement already accepted, or the requirement status is not created or revised. Will also return 404 if the requirement ID cannot be found.\n\nThe requirement must already have a signed requirement recommendation letter.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequirementVerification"
              }
            }
          }
        },
        "tags": [
          "requirement"
        ]
      },
      "parameters": []
    },
    "/requirement/verify/deny": {
      "post": {
        "summary": "Set a Requirement Status to Denied",
        "operationId": "post-requirement-verify-deny",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "kebutuhan_id": {
                      "type": "string",
                      "description": "The same requirement UUID that has been modified."
                    },
                    "modified_at": {
                      "type": "integer",
                      "description": "UNIX epoch timestamp (in seconds)."
                    }
                  },
                  "required": [
                    "kebutuhan_id",
                    "modified_at"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                },
                "examples": {
                  "ErrCodeUuidInvalid - 10418": {
                    "value": {
                      "code": 10418,
                      "message": "not a valid UUID string"
                    }
                  },
                  "ErrCodeRequirementVerificationStatusProcessedFurther- 18401": {
                    "value": {
                      "code": 18401,
                      "message": "cannot set requirement status to accepted, requirement already processed further"
                    }
                  },
                  "ErrCodeRequirementVerificationStatusAlreadyAccepted - 18402": {
                    "value": {
                      "code": 18402,
                      "message": "this requirement is already accepted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                },
                "examples": {
                  "ErrCodeEntryNotFound - 10417": {
                    "value": {
                      "code": 10417,
                      "message": "entry cannot be found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "description": "Set a requirement status to denied. Will return 400 if requirement already accepted, or the requirement status is not created, denied, or revised. Will also return 404 if the requirement ID cannot be found. ",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequirementRevision"
              }
            }
          }
        },
        "tags": [
          "requirement"
        ]
      },
      "parameters": []
    },
    "/requirement/verify/upload/recommendation-letter": {
      "post": {
        "summary": "Upload Recommendation Letter to Temporary Location",
        "operationId": "post-requirement-requirement-verify-upload-recommendation-letter",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "Object storage URL."
                    }
                  },
                  "required": [
                    "url"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "description": "You cannot upload a recommendation letter directly to permanent location. It must first be in temporary location and will then be moved to permanent location after you submit the requirement verification. To start uploading this file, create a POST request to this URL and make a PUT request to the given URL.\n\nThe given filename is used for submitting and previewing. The filename is the filename that is stored in object storage, so you will need it for previewing and when submitting the admission.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "kebutuhan_id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "requirement"
        ]
      },
      "parameters": []
    },
    "/requirement/verify/preview/recommendation-letter": {
      "get": {
        "summary": "Preview Temporary Recommendation Letter",
        "tags": [
          "requirement"
        ],
        "operationId": "get-requirement-verify-preview-recommendation-letter",
        "description": "The preview endpoints will redirect you with 302 to the signed URL. The filename is generated from the given kebutuhan_id.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "kebutuhan_id",
            "required": true,
            "description": "The filename is generated from the given kebutuhan_id."
          }
        ],
        "responses": {
          "302": {
            "description": "Found",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "deprecated": true
      },
      "parameters": []
    },
    "/requirement/verify/download/recommendation-letter": {
      "get": {
        "summary": "Download Recommendation Letter",
        "tags": [
          "requirement"
        ],
        "operationId": "get-requirement-verify-download-recommendation-letter",
        "description": "The download endpoints will redirect you with 302 to the signed URL, pointing to permanent file location. The filename is generated from the given kebutuhan_id.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "kebutuhan_id",
            "required": true,
            "description": "The filename is generated from the given kebutuhan_id."
          }
        ],
        "responses": {
          "302": {
            "description": "Found",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "deprecated": true
      },
      "parameters": []
    },
    "/requirement/verify/download/recommendation-letter/unsigned": {
      "get": {
        "summary": "Download Unsigned Recommendation Letter",
        "tags": [
          "requirement"
        ],
        "operationId": "get-requirement-verify-download-recommendation-letter-unsigned",
        "description": "The download endpoints will redirect you with 302 to the signed URL, pointing to permanent file location. Ensure that it has been generated after bulk-submit.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "kebutuhan_id",
            "required": true,
            "description": "The filename is generated from the given kebutuhan_id."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "no_redirect",
            "description": "Set to true to disable redirect, will return a `url` field with 200 code"
          }
        ],
        "responses": {
          "302": {
            "description": "Found",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "deprecated": true
      },
      "parameters": []
    },
    "/requirement/verify/download/recommendation-letter/signed": {
      "get": {
        "summary": "Download Unsigned Recommendation Letter",
        "tags": [
          "requirement"
        ],
        "operationId": "get-requirement-verify-download-recommendation-letter-signed",
        "description": "The download endpoints will redirect you with 302 to the signed URL, pointing to permanent file location. Ensure that it has been generated after bulk-submit. Signed file basically has signed-<filename> name internally in the storage, so when downloaded it will have the 'signed' prefix.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "kebutuhan_id",
            "required": true,
            "description": "The filename is generated from the given kebutuhan_id."
          }
        ],
        "responses": {
          "302": {
            "description": "Found",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "deprecated": true
      },
      "parameters": []
    },
    "/requirement/verify/bulk-submit/recommendation-letter": {
      "post": {
        "summary": "Upload Recommendation Letter for Multiple Requirements",
        "operationId": "post-requirement-admission-verify-bulk-submit-recommendation-letter",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "kegiatan_id": {
                      "type": "array",
                      "description": "The same activity UUID that has been modified.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "filename": {
                      "type": "string",
                      "description": "The generated document filename."
                    }
                  },
                  "required": [
                    "kegiatan_id",
                    "filename"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                },
                "examples": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                },
                "examples": {
                  "ErrCodeEntryNotFound - 10417": {
                    "value": {
                      "code": 10417,
                      "message": "entry cannot be found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "description": "Submit a recommendation letter for multiple requirement IDs. Date, number, document name, ttd_user_id are required. **Filename is not needed, it will be generated.** This endpoint will effectively generate a new unsigned recommendation letter.\n\nCatatan can be optionally submitted.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "surat_rekomendasi": {
                    "$ref": "#/components/schemas/Document"
                  },
                  "kebutuhan_id": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "surat_rekomendasi",
                  "kebutuhan_id"
                ]
              }
            }
          }
        },
        "tags": [
          "requirement"
        ]
      },
      "parameters": []
    },
    "/requirement/verify/sign/recommendation-letter": {
      "post": {
        "summary": "Sign a Recommendation Letter",
        "operationId": "post-requirement-admission-verify-sign-recommendation-letter",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "filename": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "filename"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                },
                "examples": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                },
                "examples": {
                  "ErrCodeEntryNotFound - 10417": {
                    "value": {
                      "code": 10417,
                      "message": "entry cannot be found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "description": "Sign a recommendation letter. (Dummy implementation)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "filename": {
                    "type": "string"
                  }
                },
                "required": [
                  "filename"
                ]
              }
            }
          }
        },
        "tags": [
          "requirement"
        ]
      },
      "parameters": []
    },
    "/requirement/verifier/get": {
      "get": {
        "summary": "Get Available Requirement Verifier",
        "tags": [
          "requirement"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RequirementVerifier"
                  }
                }
              }
            }
          }
        },
        "operationId": "get-requirement-verifier-get",
        "description": "Get available requirement verifier for a work instance (instansi kerja) ID."
      },
      "parameters": []
    },
    "/dismissal/statistic/status/get": {
      "parameters": [],
      "get": {
        "summary": "Get the Statistics of Dismissal Request Statuses",
        "operationId": "get-dismissal-statistic-status-get",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatisticStatus"
                  }
                }
              }
            }
          }
        },
        "description": "This endpoint will return an array of statistics representing each status possible for a dismissal request an the number of request is in that status currently.",
        "tags": [
          "dismissal"
        ]
      }
    },
    "/dismissal/admission/submit": {
      "post": {
        "summary": "Submit Dismissal Request",
        "operationId": "post-dismissal-admission-submit",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pemberhentian_id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "pemberhentian_id"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "description": "Submits a new dismissal request.\n\nSubmitting the admission will move support document files from temporary to permanent location. Only those files that have their filenames specified in `temp_dokumen_pendukung` are moved from temporary location. The filenames must match the names given to each file before uploading the files one by one. Endpoints such as this that require you to upload multiple files of the same kind require you to submit the filenames again. That's because you may not want all files to be saved to permanent locations, for example due to the user deleting some files that he/she just uploaded. Only the exact filenames that you supply are saved to the permanent locations. Temporary locations will be purged regularly.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "asn_id": {
                    "type": "string"
                  },
                  "alasan_pemberhentian": {
                    "type": "string"
                  },
                  "temp_dokumen_pendukung": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "nama_file": {
                          "type": "string"
                        },
                        "nama_dokumen": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "nama_file",
                        "nama_dokumen"
                      ]
                    }
                  },
                  "nomor_sk": {
                    "type": "string"
                  },
                  "tgl_sk": {
                    "type": "string"
                  },
                  "detail_alasan": {
                    "type": "string"
                  },
                  "no_usulan": {
                    "type": "string"
                  }
                },
                "required": [
                  "asn_id",
                  "alasan_pemberhentian",
                  "temp_dokumen_pendukung",
                  "no_usulan"
                ]
              }
            }
          }
        },
        "tags": [
          "dismissal"
        ]
      }
    },
    "/dismissal/admission/upload": {
      "post": {
        "summary": "Upload a Single Dismissal Request Support Document",
        "operationId": "post-dismissal-admission-upload",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "Make a PUT request with the file as request body to upload the file to the signed URL."
                    },
                    "filename": {
                      "type": "string",
                      "description": "The filename. Cache this filename for previewing and submitting."
                    }
                  },
                  "required": [
                    "url",
                    "filename"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "description": "You cannot upload an support doc directly to permanent location. It must first be in temporary location and will then be moved to permanent location after you submit the requirement admission. To start uploading this file, create a POST request to this URL and make a PUT request to the given URL.\n\nThe given filename is used for submitting and previewing. The filename is the filename that is stored in object storage, so you will need it for previewing and submitting the admission. Only pdf is allowed.",
        "tags": [
          "dismissal"
        ]
      },
      "parameters": []
    },
    "/dismissal/admission/preview": {
      "get": {
        "summary": "Preview an Dismissal Request Support Document",
        "tags": [
          "dismissal"
        ],
        "responses": {
          "302": {
            "description": "Found",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "operationId": "get-dismissal-admission-preview",
        "description": "The preview endpoints will redirect you with 302 to the signed URL. The preview endpoints like this require a filename which was generated by the upload endpoint.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "filename",
            "required": true,
            "description": "The filename generated by the upload endpoint when uploading the file."
          }
        ]
      }
    },
    "/dismissal/admission/download": {
      "get": {
        "summary": "Download an Dismissal Request Support Document",
        "tags": [
          "dismissal"
        ],
        "operationId": "get-dismissal-admission-download",
        "description": "The download endpoints will redirect you with 302 to the signed URL. The download endpoints like this require a filename that was supplied for upload, and was returned by the /detail endpoint.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "filename",
            "required": true,
            "description": "The filename generated by the upload endpoint when uploading the file."
          }
        ],
        "responses": {
          "302": {
            "description": "Found",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        }
      }
    },
    "/dismissal/admission/search-asn": {
      "get": {
        "summary": "Search ASN Based on NIP",
        "tags": [
          "dismissal"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASN"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "operationId": "get-dismissal-admission-search-asn",
        "description": "Does the exact same thing as /activity/admission/search-asn",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "nip",
            "description": "The ASN new or old NIP.",
            "required": true
          }
        ]
      }
    },
    "/dismissal/admission/get": {
      "get": {
        "summary": "Get Dismissal Admission Detail",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DismissalAdmission"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "operationId": "get-dismissal-admission-get",
        "description": "Return a detail about dismissal request, including acceptance/deny reasons and supporting documents.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "pemberhentian_id",
            "description": "Dismissal ID.",
            "required": true
          }
        ]
      }
    },
    "/dismissal/admission/search": {
      "get": {
        "summary": "Search Dismissal Admission Entries",
        "tags": [
          "dismissal"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "pemberhentian_id": {
                        "type": "string"
                      },
                      "asn_id": {
                        "type": "string"
                      },
                      "alasan_pemberhentian": {
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      },
                      "status_ts": {
                        "type": "integer"
                      },
                      "status_by": {
                        "type": "string"
                      },
                      "tgl_pemberhentian": {
                        "type": "string"
                      },
                      "alasan_tidak_diberhentikan": {
                        "type": "string"
                      },
                      "nomor_sk": {
                        "type": "string"
                      },
                      "tgl_sk": {
                        "type": "string"
                      },
                      "detail_alasan": {
                        "type": "string"
                      },
                      "no_usulan": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "pemberhentian_id",
                      "asn_id",
                      "alasan_pemberhentian",
                      "status",
                      "status_ts",
                      "status_by",
                      "tgl_pemberhentian",
                      "no_usulan"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "operationId": "get-dismissal-admission-search",
        "description": "Searches for dimissal entries, can be filtered based on status and dismissal creation date.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "tgl_pemberhentian",
            "description": "Dismissal request created at date (not dismissal acceptance date)."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "status",
            "description": "Dismissal request status."
          }
        ]
      }
    },
    "/dismissal/admission/search/paginated": {
      "get": {
        "summary": "Search Dismissal Admission Entries",
        "tags": [
          "dismissal"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "metadata": {
                      "$ref": "#/components/schemas/PaginatedListMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "pemberhentian_id": {
                              "type": "string"
                            },
                            "asn_id": {
                              "type": "string"
                            },
                            "nama": {
                              "type": "string"
                            },
                            "nip": {
                              "type": "string"
                            },
                            "alasan_pemberhentian": {
                              "type": "string"
                            },
                            "status": {
                              "type": "integer"
                            },
                            "status_ts": {
                              "type": "integer"
                            },
                            "status_by": {
                              "type": "string"
                            },
                            "tgl_pemberhentian": {
                              "type": "string"
                            },
                            "alasan_tidak_diberhentikan": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "pemberhentian_id",
                            "asn_id",
                            "alasan_pemberhentian",
                            "status",
                            "status_ts",
                            "status_by",
                            "tgl_pemberhentian"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "operationId": "get-dismissal-admission-search-paginated",
        "description": "Searches for dimissal entries, can be filtered based on status and dismissal creation date.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "tgl_pemberhentian",
            "description": "Dismissal request created at date (not dismissal acceptance date)."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "status",
            "description": "Dismissal request status."
          },
          {
            "$ref": "#/components/parameters/halaman"
          },
          {
            "$ref": "#/components/parameters/jumlah_per_halaman"
          }
        ]
      }
    },
    "/dismissal/accept/submit": {
      "post": {
        "summary": "Accept a Dismissal Request",
        "tags": [
          "dismissal"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pemberhentian_id": {
                      "type": "string"
                    },
                    "modified_at": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "pemberhentian_id",
                    "modified_at"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "operationId": "post-dismissal-accept-submit",
        "description": "Accept a dismissal request. Dismissal letter must has been uploaded to temporary storage.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pemberhentian_id": {
                    "type": "string"
                  },
                  "surat_pemberhentian": {
                    "required": [
                      "no_dokumen",
                      "tgl_dokumen"
                    ],
                    "type": "object",
                    "properties": {
                      "no_dokumen": {
                        "type": "string"
                      },
                      "tgl_dokumen": {
                        "type": "string"
                      }
                    }
                  },
                  "pejabat_penandatangan_surat_pemberhentian": {
                    "type": "string"
                  }
                },
                "required": [
                  "pemberhentian_id",
                  "surat_pemberhentian",
                  "pejabat_penandatangan_surat_pemberhentian"
                ]
              }
            }
          }
        }
      }
    },
    "/dismissal/accept/download": {
      "get": {
        "summary": "Download a Dismissal Acceptance Letter",
        "tags": [
          "dismissal"
        ],
        "operationId": "get-dismissal-accept-download",
        "description": "The download endpoints will redirect you with 302 to the signed URL. The download endpoints like this require a filename that was supplied for upload, and was returned by the /detail endpoint.\n\nAvailable placeholders for the template:\n\n```go\ntype DismissalAcceptanceTemplate struct {\n\tDocumentNumber   string `json:\"no_dokumen\"`\n\tDocumentDate     string `json:\"tgl_dokumen\"`\n\tDecreeNumber     string `json:\"no_sk\"`\n\tDecreeDate       string `json:\"tgl_sk\"`\n\tDismissalDate    string `json:\"tgl_pemberhentian\"`\n\tDismissalReason  string `json:\"alasan_pemberhentian\"`\n\tAsnName          string `json:\"nama\"`\n\tAsnNip           string `json:\"nip\"`\n\tAsnGrade         string `json:\"pangkat\"`\n\tPosition         string `json:\"jabatan_fungsional\"`\n\tOrganizationUnit string `json:\"unor\"`\n}\n```\n",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "pemberhentian_id",
            "required": true,
            "description": "Dismissal ID"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "no_redirect",
            "description": "Set to true so it does not redirect your request"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "url"
                  ]
                }
              }
            }
          },
          "302": {
            "description": "Found",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        }
      }
    },
    "/dismissal/deny/submit": {
      "post": {
        "summary": "Deny a Dismissal Request",
        "operationId": "post-dismissal-deny-submit",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pemberhentian_id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "pemberhentian_id"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "description": "Deny a dismissal request.\n\nSubmitting the request will move denial support document files from temporary to permanent location. Only those files that have their filenames specified in `temp_dokumen_pendukung_tidak_diberhentikan` are moved from temporary location. For this endpoint, `temp_dokumen_pendukung_tidak_diberhentikan` can be empty. The filenames must match the names given to each file before uploading the files one by one. Endpoints such as this that require you to upload multiple files of the same kind require you to submit the filenames again. That's because you may not want all files to be saved to permanent locations, for example due to the user deleting some files that he/she just uploaded. Only the exact filenames that you supply are saved to the permanent locations. Temporary locations will be purged regularly.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "asn_id": {
                    "type": "string"
                  },
                  "alasan_tidak_diberhentikan": {
                    "type": "string"
                  },
                  "temp_dokumen_pendukung_tidak_diberhentikan": {
                    "type": "array",
                    "description": "Can be left empty or nil.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "filename": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "filename"
                      ]
                    }
                  }
                },
                "required": [
                  "asn_id",
                  "alasan_tidak_diberhentikan"
                ]
              }
            }
          }
        },
        "tags": [
          "dismissal"
        ]
      }
    },
    "/dismissal/deny/upload": {
      "post": {
        "summary": "Upload a Single Dismissal Deny Support Document",
        "operationId": "post-dismissal-deny-upload",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "Make a PUT request with the file as request body to upload the file to the signed URL."
                    },
                    "filename": {
                      "type": "string",
                      "description": "The filename. Cache this filename for previewing and submitting."
                    }
                  },
                  "required": [
                    "url",
                    "filename"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "description": "You cannot upload a support doc directly to permanent location. It must first be in temporary location and will then be moved to permanent location after you submit the requirement admission. To start uploading this file, create a POST request to this URL and make a PUT request to the given URL.\n\nThe given filename is used for submitting and previewing. The filename is the filename that is stored in object storage, so you will need it for previewing and submitting the admission. Only pdf is allowed.",
        "tags": [
          "dismissal"
        ]
      },
      "parameters": []
    },
    "/dismissal/deny/preview": {
      "get": {
        "summary": "Preview an Dismissal Deny Support Document",
        "tags": [
          "dismissal"
        ],
        "responses": {
          "302": {
            "description": "Found",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "operationId": "get-dismissal-deny-preview",
        "description": "The preview endpoints will redirect you with 302 to the signed URL. The preview endpoints like this require a filename which was generated by the upload endpoint.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "filename",
            "required": true,
            "description": "The filename generated by the upload endpoint when uploading the file."
          }
        ]
      }
    },
    "/dismissal/deny/download": {
      "get": {
        "summary": "Download an Dismissal Deny Support Document",
        "tags": [
          "dismissal"
        ],
        "operationId": "get-dismissal-deny-download",
        "description": "The download endpoints will redirect you with 302 to the signed URL. The download endpoints like this require a filename that was supplied for upload, and was returned by the /detail endpoint.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "filename",
            "required": true,
            "description": "The filename generated by the upload endpoint when uploading the file."
          }
        ],
        "responses": {
          "302": {
            "description": "Found",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        }
      }
    },
    "/promotion/statistic/status/get": {
      "parameters": [],
      "get": {
        "summary": "Get the Statistics of Promotion Request Statuses",
        "operationId": "get-promotion-statistic-status-get",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatisticStatus"
                  }
                }
              }
            }
          }
        },
        "description": "This endpoint will return an array of statistics representing each status possible for a promotion request an the number of request is in that status currently.",
        "tags": [
          "promotion"
        ]
      }
    },
    "/promotion/admission/submit": {
      "post": {
        "summary": "Submit Promotion Request",
        "operationId": "post-promotion-admission-submit",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pengangkatan_id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "pengangkatan_id"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "description": "Submits a new promotion request.\n\nSubmitting the admission will move support document files from temporary to permanent location. The filenames must match the names given to each file before uploading the files one by one. Endpoints such as this that require you to upload multiple files of the same kind require you to submit the filenames again. That's because you may not want all files to be saved to permanent locations, for example due to the user deleting some files that he/she just uploaded. Only the exact filenames that you supply are saved to the permanent locations. Temporary locations will be purged regularly.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nomor_usulan": {
                    "type": "string"
                  },
                  "tanggal_usulan": {
                    "type": "string",
                    "format": "date"
                  },
                  "asn_id": {
                    "type": "string"
                  },
                  "test_status": {
                    "type": "integer",
                    "enum": [
                      1,
                      2
                    ],
                    "description": "1-Lulus, 2-Tidak Lulus"
                  },
                  "test_nilai": {
                    "type": "number"
                  },
                  "jenis_pengangkatan": {
                    "type": "integer",
                    "description": "1-perpindahan jabatan, 2-promosi, 3-inpassing",
                    "enum": [
                      1,
                      2,
                      3
                    ]
                  },
                  "jabatan_fungsional_tujuan_id": {
                    "type": "string"
                  },
                  "surat_pak": {
                    "$ref": "#/components/schemas/Document"
                  },
                  "surat_rekomendasi": {
                    "$ref": "#/components/schemas/Document"
                  },
                  "sertifikat_uji_kompetensi": {
                    "$ref": "#/components/schemas/Document"
                  }
                },
                "required": [
                  "nomor_usulan",
                  "tanggal_usulan",
                  "asn_id",
                  "test_status",
                  "jenis_pengangkatan",
                  "jabatan_fungsional_tujuan_id"
                ]
              }
            }
          }
        },
        "tags": [
          "promotion"
        ]
      },
      "parameters": []
    },
    "/promotion/admission/upload/pak": {
      "post": {
        "summary": "Upload a Single Promotion PAK Letter Document",
        "operationId": "post-promotion-admission-upload-pak",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "Make a PUT request with the file as request body to upload the file to the signed URL."
                    },
                    "filename": {
                      "type": "string",
                      "description": "The filename. Cache this filename for previewing and submitting."
                    }
                  },
                  "required": [
                    "url",
                    "filename"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "description": "You cannot upload an support doc directly to permanent location. It must first be in temporary location and will then be moved to permanent location after you submit the requirement admission. To start uploading this file, create a POST request to this URL and make a PUT request to the given URL.\n\nThe given filename is used for submitting and previewing. The filename is the filename that is stored in object storage, so you will need it for previewing and submitting the admission. Only pdf is allowed.",
        "tags": [
          "promotion"
        ]
      },
      "parameters": []
    },
    "/promotion/admission/preview/pak": {
      "get": {
        "summary": "Preview a Promotion PAK Letter Document",
        "tags": [
          "promotion"
        ],
        "responses": {
          "302": {
            "description": "Found",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "operationId": "get-promotion-admission-preview-pak",
        "description": "The preview endpoints will redirect you with 302 to the signed URL. The preview endpoints like this require a filename which was generated by the upload endpoint.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "filename",
            "required": true,
            "description": "The filename generated by the upload endpoint when uploading the file."
          }
        ]
      }
    },
    "/promotion/admission/download/pak": {
      "get": {
        "summary": "Download a Promotion PAK Letter Document",
        "tags": [
          "promotion"
        ],
        "operationId": "get-promotion-admission-download-pak",
        "description": "The download endpoints will redirect you with 302 to the signed URL. The download endpoints like this require a filename that was supplied for upload, and was returned by the /detail endpoint.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "pengangkatan_id",
            "required": true,
            "description": "The id of promotion entry."
          }
        ],
        "responses": {
          "302": {
            "description": "Found",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/promotion/admission/template/pak": {
      "get": {
        "summary": "Download Promotion PAK Letter Template",
        "tags": [
          "promotion"
        ],
        "operationId": "get-promotion-admission-template-pak",
        "description": "The download endpoints will redirect you with 302 to the signed URL for downloading the template document.",
        "parameters": [],
        "responses": {
          "302": {
            "description": "Found",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/promotion/admission/upload/recommendation-letter": {
      "post": {
        "summary": "Upload a Single Promotion Recommendation Letter Document",
        "operationId": "post-promotion-admission-upload-recommendation-letter",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "Make a PUT request with the file as request body to upload the file to the signed URL."
                    },
                    "filename": {
                      "type": "string",
                      "description": "The filename. Cache this filename for previewing and submitting."
                    }
                  },
                  "required": [
                    "url",
                    "filename"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "description": "You cannot upload an support doc directly to permanent location. It must first be in temporary location and will then be moved to permanent location after you submit the requirement admission. To start uploading this file, create a POST request to this URL and make a PUT request to the given URL.\n\nThe given filename is used for submitting and previewing. The filename is the filename that is stored in object storage, so you will need it for previewing and submitting the admission. Only pdf is allowed.",
        "tags": [
          "promotion"
        ]
      },
      "parameters": []
    },
    "/promotion/admission/preview/recommendation-letter": {
      "get": {
        "summary": "Preview a Promotion Recommendation Letter Document",
        "tags": [
          "promotion"
        ],
        "responses": {
          "302": {
            "description": "Found",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "operationId": "get-promotion-admission-preview-recommendation-letter",
        "description": "The preview endpoints will redirect you with 302 to the signed URL. The preview endpoints like this require a filename which was generated by the upload endpoint.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "filename",
            "required": true,
            "description": "The filename generated by the upload endpoint when uploading the file."
          }
        ]
      }
    },
    "/promotion/admission/download/recommendation-letter": {
      "get": {
        "summary": "Download a Promotion Recommendation Letter Document",
        "tags": [
          "promotion"
        ],
        "operationId": "get-promotion-admission-download-recommendation-letter",
        "description": "The download endpoints will redirect you with 302 to the signed URL. The download endpoints like this require a filename that was supplied for upload, and was returned by the /detail endpoint.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "pengangkatan_id",
            "required": true,
            "description": "The id of promotion entry."
          }
        ],
        "responses": {
          "302": {
            "description": "Found",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/promotion/admission/template/recommendation-letter": {
      "get": {
        "summary": "Download Promotion Recommendation Letter Template",
        "tags": [
          "promotion"
        ],
        "operationId": "get-promotion-admission-template-recommendation-letter",
        "description": "The download endpoints will redirect you with 302 to the signed URL for downloading the template document.",
        "parameters": [],
        "responses": {
          "302": {
            "description": "Found",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/promotion/admission/upload/test-certificate": {
      "post": {
        "summary": "Upload a Single Promotion's Competence Test Certificate Document",
        "operationId": "post-promotion-admission-upload-test-certificate",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "Make a PUT request with the file as request body to upload the file to the signed URL."
                    },
                    "filename": {
                      "type": "string",
                      "description": "The filename. Cache this filename for previewing and submitting."
                    }
                  },
                  "required": [
                    "url",
                    "filename"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "description": "You cannot upload an support doc directly to permanent location. It must first be in temporary location and will then be moved to permanent location after you submit the requirement admission. To start uploading this file, create a POST request to this URL and make a PUT request to the given URL.\n\nThe given filename is used for submitting and previewing. The filename is the filename that is stored in object storage, so you will need it for previewing and submitting the admission. Only pdf is allowed.",
        "tags": [
          "promotion"
        ]
      },
      "parameters": []
    },
    "/promotion/admission/preview/test-certificate": {
      "get": {
        "summary": "Preview a Promotion's Competence Test Certificate Document",
        "tags": [
          "promotion"
        ],
        "responses": {
          "302": {
            "description": "Found",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "operationId": "get-promotion-admission-preview-test-certificate",
        "description": "The preview endpoints will redirect you with 302 to the signed URL. The preview endpoints like this require a filename which was generated by the upload endpoint.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "filename",
            "required": true,
            "description": "The filename generated by the upload endpoint when uploading the file."
          }
        ]
      }
    },
    "/promotion/admission/download/test-certificate": {
      "get": {
        "summary": "Download a Promotion's Competence Test Certificate Document",
        "tags": [
          "promotion"
        ],
        "operationId": "get-promotion-admission-download-test-certificate",
        "description": "The download endpoints will redirect you with 302 to the signed URL. The download endpoints like this require a filename that was supplied for upload, and was returned by the /detail endpoint.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "pengangkatan_id",
            "required": true,
            "description": "The id of promotion entry."
          }
        ],
        "responses": {
          "302": {
            "description": "Found",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/promotion/admission/upload/promotion-letter": {
      "post": {
        "summary": "Upload a Single Promotion Promotion Letter Document",
        "operationId": "post-promotion-admission-upload-promotion-letter",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "Make a PUT request with the file as request body to upload the file to the signed URL."
                    },
                    "filename": {
                      "type": "string",
                      "description": "The filename. Cache this filename for previewing and submitting."
                    }
                  },
                  "required": [
                    "url",
                    "filename"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "description": "You cannot upload an support doc directly to permanent location. It must first be in temporary location and will then be moved to permanent location after you submit the requirement admission. To start uploading this file, create a POST request to this URL and make a PUT request to the given URL.\n\nThe given filename is used for submitting and previewing. The filename is the filename that is stored in object storage, so you will need it for previewing and submitting the admission. Only pdf is allowed.",
        "tags": [
          "promotion"
        ]
      },
      "parameters": []
    },
    "/promotion/admission/preview/promotion-letter": {
      "get": {
        "summary": "Preview a Promotion Promotion Letter Document",
        "tags": [
          "promotion"
        ],
        "responses": {
          "302": {
            "description": "Found",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "operationId": "get-promotion-admission-preview-promotion-letter",
        "description": "The preview endpoints will redirect you with 302 to the signed URL. The preview endpoints like this require a filename which was generated by the upload endpoint.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "filename",
            "required": true,
            "description": "The filename generated by the upload endpoint when uploading the file."
          }
        ]
      }
    },
    "/promotion/admission/download/promotion-letter": {
      "get": {
        "summary": "Download a Promotion Promotion Letter Document",
        "tags": [
          "promotion"
        ],
        "operationId": "get-promotion-admission-download-promotion-letter",
        "description": "The download endpoints will redirect you with 302 to the signed URL.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "pengangkatan_id",
            "required": true,
            "description": "The id of promotion entry."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "force",
            "description": "force to regenerate promotion letter"
          }
        ],
        "responses": {
          "302": {
            "description": "Found",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/promotion/admission/accept": {
      "post": {
        "summary": "Accept Promotion Request",
        "operationId": "post-promotion-admission-accept",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pengangkatan_id": {
                      "type": "string"
                    },
                    "modified_at": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "pengangkatan_id",
                    "modified_at"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "description": "Accept a promotion admission.\n\nSubmitting the admission will move support document files from temporary to permanent location. The filenames must match the names given to each file before uploading the files one by one. Endpoints such as this that require you to upload multiple files of the same kind require you to submit the filenames again. That's because you may not want all files to be saved to permanent locations, for example due to the user deleting some files that he/she just uploaded. Only the exact filenames that you supply are saved to the permanent locations. Temporary locations will be purged regularly.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pengangkatan_id": {
                    "type": "string"
                  },
                  "surat_pengangkatan": {
                    "$ref": "#/components/schemas/Document"
                  }
                },
                "required": [
                  "pengangkatan_id",
                  "surat_pengangkatan"
                ]
              }
            }
          }
        },
        "tags": [
          "promotion"
        ]
      },
      "parameters": []
    },
    "/promotion/admission/reject": {
      "post": {
        "summary": "Reject Promotion Request",
        "operationId": "post-promotion-admission-reject",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pengangkatan_id": {
                      "type": "string"
                    },
                    "modified_at": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "pengangkatan_id",
                    "modified_at"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "description": "Reject a promotion admission.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pengangkatan_id": {
                    "type": "string"
                  },
                  "alasan_tidak_diangkat": {
                    "type": "string"
                  }
                },
                "required": [
                  "pengangkatan_id",
                  "alasan_tidak_diangkat"
                ]
              }
            }
          }
        },
        "tags": [
          "promotion"
        ]
      },
      "parameters": []
    },
    "/promotion/admission/search/paginated": {
      "get": {
        "summary": "Search Promotion Admission Entries",
        "tags": [
          "promotion"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "pengangkatan_id": {
                          "type": "string"
                        },
                        "asn_id": {
                          "type": "string"
                        },
                        "nama": {
                          "type": "string"
                        },
                        "status": {
                          "type": "integer"
                        },
                        "jenis_pengangkatan": {
                          "type": "integer"
                        },
                        "tgl_doc_surat_rekomendasi": {
                          "type": "string"
                        }
                      }
                    },
                    "metadata": {
                      "$ref": "#/components/schemas/PaginatedListMetadata"
                    }
                  },
                  "required": [
                    "data",
                    "metadata"
                  ]
                },
                "examples": {}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                },
                "examples": {
                  "ErrCodeFilterInvalidStatus - 13412": {
                    "value": {
                      "code": 13412,
                      "message": "admission status must be >= 1 and <= 3)"
                    }
                  },
                  "ErrCodeFilterInvalidDate - 13413": {
                    "value": {
                      "code": 13413,
                      "message": "date must be in the format of YYYY-MM-DD (e.g. 2006-12-31)"
                    }
                  },
                  "ErrCodeFilterInvalidType - 13414": {
                    "value": {
                      "code": 13414,
                      "message": "type (jenis_pengangkatan) must be >= 1 and <= 3"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-promotion-admission-search-paginated",
        "description": "Search for a list of promotion admissions.\n\nAdditional filters can be provided to filter the search by the promotion admission status, promotion admission type or promotion admission date.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "tgl_doc_surat_rekomendasi",
            "description": "The date of admission with a format of YYYY-MM-DD (e.g. 2006-12-31)"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "status",
            "description": "1- belum diproses, 2-diangkat, 3-tidak diangkat"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "jenis_pengangkatan",
            "description": "1-perpindahan jabatan, 2-kenaikan jenjang, 3-inpassing"
          },
          {
            "$ref": "#/components/parameters/halaman"
          },
          {
            "$ref": "#/components/parameters/jumlah_per_halaman"
          }
        ]
      }
    },
    "/promotion-cpns/statistic/status/get": {
      "parameters": [],
      "get": {
        "summary": "Get the Statistics of CPNS Promotion Request Statuses",
        "operationId": "get-promotion-cpns-statistic-status-get",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatisticStatus"
                  }
                }
              }
            }
          }
        },
        "description": "This endpoint will return an array of statistics representing each status possible for a CPNS promotion request an the number of request is in that status currently.",
        "tags": [
          "promotion-cpns"
        ]
      }
    },
    "/promotion-cpns/admission/get": {
      "get": {
        "summary": "Get Detail of CPNS Promotion Admission",
        "tags": [
          "promotion-cpns"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionCpnsAdmissionDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "operationId": "get-promotion-cpns-admission-get",
        "description": "Get detail of an CPNS promotion admission with matched ID.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "pengangkatan_cpns_id",
            "description": "The ID of the CPNS promotion admission"
          }
        ]
      },
      "parameters": []
    },
    "/promotion-cpns/admission/search/paginated": {
      "get": {
        "summary": "Search CPNS Promotion Admission Entries",
        "tags": [
          "promotion-cpns"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "pengangkatan_cpns_id": {
                          "type": "string"
                        },
                        "asn_id": {
                          "type": "string"
                        },
                        "nip": {
                          "type": "string"
                        },
                        "nama": {
                          "type": "string"
                        },
                        "angka_kredit_pertama": {
                          "type": "integer"
                        },
                        "jabatan_fungsional_tujuan_id": {
                          "type": "string"
                        },
                        "jabatan_fungsional_tujuan": {
                          "type": "string"
                        },
                        "unor_id": {
                          "type": "string"
                        },
                        "unor": {
                          "type": "string"
                        },
                        "status": {
                          "type": "integer"
                        },
                        "nomor_usulan": {
                          "type": "string"
                        },
                        "tgl_usulan": {
                          "type": "string"
                        }
                      }
                    },
                    "metadata": {
                      "$ref": "#/components/schemas/PaginatedListMetadata"
                    }
                  },
                  "required": [
                    "data",
                    "metadata"
                  ]
                },
                "examples": {}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                },
                "examples": {
                  "ErrCodeFilterInvalidStatus - 13412": {
                    "value": {
                      "code": 13412,
                      "message": "admission status must be >= 1 and <= 3)"
                    }
                  },
                  "ErrCodeFilterInvalidDate - 13413": {
                    "value": {
                      "code": 13413,
                      "message": "date must be in the format of YYYY-MM-DD (e.g. 2006-12-31)"
                    }
                  },
                  "ErrCodeFilterInvalidType - 13414": {
                    "value": {
                      "code": 13414,
                      "message": "type (jenis_pengangkatan) must be >= 1 and <= 3"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-promotion-cpns-admission-search-paginated",
        "description": "Search for a list of promotion admissions.\n\nAdditional filters can be provided to filter the search by the promotion admission status, promotion admission type or promotion admission date.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "tgl_usulan",
            "description": "The date of admission with a format of YYYY-MM-DD (e.g. 2006-12-31)"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "status"
          },
          {
            "$ref": "#/components/parameters/halaman"
          },
          {
            "$ref": "#/components/parameters/jumlah_per_halaman"
          }
        ]
      }
    },
    "/promotion-cpns/admission/upload/pak": {
      "post": {
        "summary": "Upload a Single Promotion for CPNS PAK Letter Document",
        "operationId": "post-promotion-cpns-admission-upload-pak",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "Make a PUT request with the file as request body to upload the file to the signed URL."
                    },
                    "filename": {
                      "type": "string",
                      "description": "The filename. Cache this filename for previewing and submitting."
                    }
                  },
                  "required": [
                    "url",
                    "filename"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "description": "You cannot upload an support doc directly to permanent location. It must first be in temporary location and will then be moved to permanent location after you submit the requirement admission. To start uploading this file, create a POST request to this URL and make a PUT request to the given URL.\n\nThe given filename is used for submitting and previewing. The filename is the filename that is stored in object storage, so you will need it for previewing and submitting the admission. Only pdf is allowed.",
        "tags": [
          "promotion-cpns"
        ]
      },
      "parameters": []
    },
    "/promotion-cpns/admission/preview/pak": {
      "get": {
        "summary": "Preview a Promotion for CPNS PAK Letter Document",
        "tags": [
          "promotion-cpns"
        ],
        "responses": {
          "302": {
            "description": "Found",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "operationId": "get-promotion-cpns-admission-preview-pak",
        "description": "The preview endpoints will redirect you with 302 to the signed URL. The preview endpoints like this require a filename which was generated by the upload endpoint.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "filename",
            "required": true,
            "description": "The filename generated by the upload endpoint when uploading the file."
          }
        ]
      }
    },
    "/promotion-cpns/admission/download/pak": {
      "get": {
        "summary": "Download a Promotion for CPNS PAK Letter Document",
        "tags": [
          "promotion-cpns"
        ],
        "operationId": "get-promotion-cpns-admission-download-pak",
        "description": "The download endpoints will redirect you with 302 to the signed URL. The download endpoints like this require a filename that was supplied for upload, and was returned by the /detail endpoint.",
        "parameters": [
          {
            "$ref": "#/components/parameters/pengangkatan_cpns_id"
          }
        ],
        "responses": {
          "302": {
            "description": "Found",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/promotion-cpns/admission/upload/promotion-letter": {
      "post": {
        "summary": "Upload a Single Promotion for CPNS Promotion Letter Document",
        "operationId": "post-promotion-cpns-admission-upload-promotion-letter",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "Make a PUT request with the file as request body to upload the file to the signed URL."
                    },
                    "filename": {
                      "type": "string",
                      "description": "The filename. Cache this filename for previewing and submitting."
                    }
                  },
                  "required": [
                    "url",
                    "filename"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "description": "You cannot upload an support doc directly to permanent location. It must first be in temporary location and will then be moved to permanent location after you submit the requirement admission. To start uploading this file, create a POST request to this URL and make a PUT request to the given URL.\n\nThe given filename is used for submitting and previewing. The filename is the filename that is stored in object storage, so you will need it for previewing and submitting the admission. Only pdf is allowed.",
        "tags": [
          "promotion-cpns"
        ]
      },
      "parameters": []
    },
    "/promotion-cpns/admission/preview/promotion-letter": {
      "get": {
        "summary": "Preview a Promotion for CPNS Promotion Letter Document",
        "tags": [
          "promotion-cpns"
        ],
        "responses": {
          "302": {
            "description": "Found",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "operationId": "get-promotion-cpns-admission-preview-promotion-letter",
        "description": "The preview endpoints will redirect you with 302 to the signed URL. The preview endpoints like this require a filename which was generated by the upload endpoint.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "filename",
            "required": true,
            "description": "The filename generated by the upload endpoint when uploading the file."
          }
        ]
      }
    },
    "/promotion-cpns/admission/download/promotion-letter": {
      "get": {
        "summary": "Download a Promotion for CPNS Promotion Letter Document",
        "tags": [
          "promotion-cpns"
        ],
        "operationId": "get-promotion-cpns-admission-download-promotion-letter",
        "description": "The download endpoints will redirect you with 302 to the signed URL. The download endpoints like this require a filename that was supplied for upload, and was returned by the /detail endpoint.",
        "parameters": [
          {
            "$ref": "#/components/parameters/pengangkatan_cpns_id"
          }
        ],
        "responses": {
          "302": {
            "description": "Found",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/promotion-cpns/admission/submit": {
      "parameters": [],
      "post": {
        "summary": "Submit CPNS Promotion Request",
        "operationId": "post-promotion-cpns-admission-submit",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pengangkatan_cpns_id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "pengangkatan_cpns_id"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "promotion-cpns"
        ],
        "description": "Submits a new CPNS promotion request.\n\nSubmitting the admission will move support document files from temporary to permanent location. The filenames must match the names given to each file before uploading the files one by one. Endpoints such as this that require you to upload multiple files of the same kind require you to submit the filenames again. That's because you may not want all files to be saved to permanent locations, for example due to the user deleting some files that he/she just uploaded. Only the exact filenames that you supply are saved to the permanent locations. Temporary locations will be purged regularly.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "asn_id": {
                    "type": "string"
                  },
                  "nomor_usulan": {
                    "type": "string"
                  },
                  "jabatan_fungsional_tujuan_id": {
                    "type": "string"
                  },
                  "unor_id": {
                    "type": "string"
                  },
                  "tanggal_usulan": {
                    "type": "string",
                    "format": "date"
                  },
                  "surat_pak": {
                    "type": "object",
                    "required": [
                      "nama_file",
                      "no_dokumen",
                      "tgl_dokumen"
                    ],
                    "properties": {
                      "nama_file": {
                        "type": "string"
                      },
                      "no_dokumen": {
                        "type": "string"
                      },
                      "tgl_dokumen": {
                        "type": "string",
                        "format": "date"
                      }
                    }
                  },
                  "surat_pengangkatan": {
                    "type": "object",
                    "required": [
                      "nama_file",
                      "no_dokumen",
                      "tgl_dokumen"
                    ],
                    "properties": {
                      "nama_file": {
                        "type": "string"
                      },
                      "no_dokumen": {
                        "type": "string"
                      },
                      "tgl_dokumen": {
                        "type": "string",
                        "format": "date"
                      }
                    }
                  }
                },
                "required": [
                  "asn_id",
                  "nomor_usulan",
                  "jabatan_fungsional_tujuan_id",
                  "unor_id",
                  "tanggal_usulan",
                  "surat_pak",
                  "surat_pengangkatan"
                ]
              }
            }
          }
        }
      }
    },
    "/generic/position/get": {
      "get": {
        "summary": "Get Available Position Grade",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PositionGrade"
                  }
                }
              }
            }
          }
        },
        "operationId": "get-requirement-position-get",
        "description": "Get available position grade for a work instance (instansi kerja) ID."
      },
      "parameters": []
    },
    "/generic/profile/get": {
      "get": {
        "summary": "Retrieve the Logged In ASN Profile",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ASN"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "operationId": "get-generic-profile-get",
        "description": "Retrieves the user profile from authentication token."
      }
    },
    "/generic/bezetting": {
      "get": {
        "summary": "Position Grade Bezetting Get",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "jabatan_id": {
                      "type": "string"
                    },
                    "unit_organisasi_id": {
                      "type": "string"
                    },
                    "jumlah": {
                      "type": "integer",
                      "description": "Number of ASN that has jabatan_id in unit_organisasi_id"
                    }
                  },
                  "required": [
                    "jabatan_id",
                    "unit_organisasi_id",
                    "jumlah"
                  ]
                }
              }
            }
          }
        },
        "operationId": "get-generic-bezetting",
        "description": "This endpoint will return the count of employees or \"bezetting\" from the current position grade in an organization unit.",
        "parameters": [
          {
            "$ref": "#/components/parameters/jabatan_id"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "unit_organisasi_id",
            "description": "Organization unit ID",
            "required": true
          }
        ],
        "deprecated": true
      },
      "parameters": []
    },
    "/generic/unit/list": {
      "get": {
        "summary": "List All Organization Units in Logged-in User Agency",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "unit_organisasi_id": {
                        "type": "string"
                      },
                      "unit_organisasi": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "unit_organisasi_id",
                      "unit_organisasi"
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "get-generic-unit-list",
        "description": "List all organization units ID and names."
      }
    },
    "/generic/template/upload/{path}": {
      "post": {
        "summary": "Upload a .docx Template",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "url"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "operationId": "get-generic-template-upload",
        "description": "The uploaded file must be a docx file.\nWill throw 404 if template cannot be found.\n\nAvailable {path} values:\nactivity/certificate.docx => Attendee activity certificate\nrequirement/recommendation-letter.docx => Requirement recommendation letter\ndismissal/acceptance-letter.docx => Dismissal letter"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "path",
          "in": "path",
          "required": true,
          "description": "Template paths"
        }
      ]
    },
    "/generic/template/download/{path}": {
      "get": {
        "summary": "Download a .docx Template",
        "tags": [],
        "responses": {
          "302": {
            "description": "Found",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "operationId": "get-generic-template-download",
        "description": "Will throw 404 if template cannot be found.\n\nAvailable {path} values can be seen in the upload endpoint."
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "path",
          "in": "path",
          "required": true,
          "description": "Template paths"
        }
      ]
    },
    "/assessment-team/admission/upload": {
      "post": {
        "summary": "Upload a Single Assessment Team Admission Support Document",
        "operationId": "post-assessment-team-admission-upload",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "Make a PUT request with the file as request body to upload the file to the signed URL."
                    },
                    "filename": {
                      "type": "string",
                      "description": "The filename. Cache this filename for previewing and submitting."
                    }
                  },
                  "required": [
                    "url",
                    "filename"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "description": "You cannot upload an support doc directly to permanent location. It must first be in temporary location and will then be moved to permanent location after you submit the admission. To start uploading this file, create a POST request to this URL and make a PUT request to the given URL.\n\nThe given filename is used for submitting and previewing. The filename is the filename that is stored in object storage, so you will need it for previewing and submitting the admission.\n\nFor this you also have to submit the MIME type of the file you want to upload. The API will check if the type is allowed and will generate a filename according to the MIME type.\n\nOnly these are allowed:\napplication/pdf => .pdf\napplication/vnd.openxmlformats-officedocument.spreadsheetml.sheet => .xlsx\napplication/vnd.ms-excel => .xls\napplication/vnd.openxmlformats-officedocument.wordprocessingm => .docx\napplication/msword => .doc",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "mime_type": {
                    "type": "string",
                    "description": "The MIME type of the file you want to upload. The generated filename has extension that depends on the MIME type."
                  }
                },
                "required": [
                  "mime_type"
                ]
              }
            }
          }
        },
        "tags": [
          "activity"
        ]
      }
    },
    "/assessment-team/admission/preview": {
      "get": {
        "summary": "Preview an Assessment Team Admission Support Document",
        "tags": [
          "activity"
        ],
        "responses": {
          "302": {
            "description": "Found",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "operationId": "get-assessment-team-admission-preview",
        "description": "The preview endpoints will redirect you with 302 to the signed URL. The preview endpoints like this require a filename which was generated by the upload endpoint.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "filename",
            "required": true,
            "description": "The filename generated by the upload endpoint when uploading the file."
          }
        ]
      }
    },
    "/assessment-team/admission/download": {
      "get": {
        "summary": "Download an Assessment Team Admission Support Document",
        "tags": [
          "activity"
        ],
        "operationId": "get-assessment-team-admission-download",
        "description": "The download endpoints will redirect you with 302 to the signed URL. The download endpoints like this require a filename that was supplied for upload, and was returned by the /detail endpoint.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "filename",
            "required": true,
            "description": "The filename generated by the upload endpoint when uploading the file."
          }
        ],
        "responses": {
          "302": {
            "description": "Found",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        }
      }
    },
    "/assessment-team/admission/get": {
      "get": {
        "summary": "Get Detail of Assessment Team",
        "tags": [
          "assessment-team"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentTeam"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "operationId": "get-assessment-team-admission-get",
        "description": "Get detail of an assessment team with matched ID.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "tim_penilaian_id",
            "description": "The ID of the assessment team admission"
          }
        ]
      },
      "parameters": []
    },
    "/assessment-team/admission/submit": {
      "parameters": [],
      "post": {
        "summary": "Submit Assessment Team Admission",
        "operationId": "post-assessment-team-admission-submit",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tim_penilaian_id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "tim_penilaian_id"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "promotion-cpns"
        ],
        "description": "Submits a new assessment team admission.\n\nSubmitting the admission will move support document files from temporary to permanent location. The filenames must match the names given to each file before uploading the files one by one. Endpoints such as this that require you to upload multiple files of the same kind require you to submit the filenames again. That's because you may not want all files to be saved to permanent locations, for example due to the user deleting some files that he/she just uploaded. Only the exact filenames that you supply are saved to the permanent locations. Temporary locations will be purged regularly.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssessmentTeamAdmission"
              }
            }
          }
        }
      }
    },
    "/assessment-team/verification/submit": {
      "parameters": [],
      "post": {
        "summary": "Submit Assessment Team Verification",
        "operationId": "post-assessment-team-verification-submit",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tim_penilaian_id": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "tim_penilaian_id",
                    "updated_at"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "promotion-cpns"
        ],
        "description": "Submits a new assessment team verification.\n\nSubmitting the verification will move recommendation letter files from temporary to permanent location. The filenames must match the names given to each file before uploading the files one by one. Endpoints such as this that require you to upload multiple files of the same kind require you to submit the filenames again. That's because you may not want all files to be saved to permanent locations, for example due to the user deleting some files that he/she just uploaded. Only the exact filenames that you supply are saved to the permanent locations. Temporary locations will be purged regularly.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssessmentTeamVerification"
              }
            }
          }
        }
      }
    },
    "/assessment-team/admission/search": {
      "get": {
        "summary": "Search Assessment Team Entries",
        "tags": [
          "assessment-team"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AssessmentTeamItem"
                      }
                    },
                    "metadata": {
                      "$ref": "#/components/schemas/PaginatedListMetadata"
                    }
                  },
                  "required": [
                    "data",
                    "metadata"
                  ]
                },
                "examples": {}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                },
                "examples": {
                  "ErrCodeFilterInvalidStatus - 18406": {
                    "value": {
                      "code": 18406,
                      "message": "admission status must be >= 1 and <= 2)"
                    }
                  },
                  "ErrCodeFilterInvalidDate - 18407": {
                    "value": {
                      "code": 18407,
                      "message": "date must be in the format of YYYY-MM-DD (e.g. 2006-12-31)"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-assessment-team-admission-search",
        "description": "Search for a list of assessment team.\n\nAdditional filters can be provided to filter the search by the assessment team admission status or assessment team admission date.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "tgl_usulan",
            "description": "The date of admission with a format of YYYY-MM-DD (e.g. 2006-12-31)"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "status"
          },
          {
            "$ref": "#/components/parameters/halaman"
          },
          {
            "$ref": "#/components/parameters/jumlah_per_halaman"
          }
        ]
      },
      "parameters": []
    },
    "/assessment-team/verification/upload": {
      "post": {
        "summary": "Upload a Single Assessment Team Verification Recommendation Letter",
        "operationId": "post-assessment-team-verification-upload",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "Make a PUT request with the file as request body to upload the file to the signed URL."
                    }
                  },
                  "required": [
                    "url"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "description": "You cannot upload a recommendation letter directly to permanent location. It must first be in temporary location and will then be moved to permanent location after you submit the verification. To start uploading this file, create a POST request to this URL and make a PUT request to the given URL.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tim_penilaian_id": {
                    "type": "string",
                    "description": "The Assessment Team ID"
                  }
                },
                "required": [
                  "tim_penilaian_id"
                ]
              }
            }
          }
        },
        "tags": [
          "activity"
        ]
      }
    },
    "/assessment-team/verification/preview": {
      "get": {
        "summary": "Preview an Assessment Team Verification Recommendation Letter",
        "tags": [
          "activity"
        ],
        "responses": {
          "302": {
            "description": "Found",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        },
        "operationId": "get-assessment-team-verification-preview",
        "description": "The preview endpoints will redirect you with 302 to the signed URL. The filename is generated from the given tim_penilaian_id.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "tim_penilaian_id",
            "required": true,
            "description": "The Assessment Team ID"
          }
        ]
      }
    },
    "/assessment-team/verification/download": {
      "get": {
        "summary": "Download an Assessment Team Verification Recommendation Letter",
        "tags": [
          "activity"
        ],
        "operationId": "get-assessment-team-verification-download",
        "description": "The download endpoints will redirect you with 302 to the signed URL. The filename is generated from the given tim_penilaian_id.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "tim_penilaian_id",
            "required": true,
            "description": "The Assessment Team ID"
          }
        ],
        "responses": {
          "302": {
            "description": "Found",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCode"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorCode": {
        "title": "ErrorCode",
        "type": "object",
        "description": "Error, with code, and optionally with cause and extra data too.",
        "properties": {
          "code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "cause": {
            "type": "string"
          },
          "data": {
            "type": "object"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "ActivityAdmission": {
        "title": "ActivityAdmission",
        "type": "object",
        "description": "This model represents an activity admission data.",
        "properties": {
          "name": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "description": "1:Pengusulan (Aksi: Lihat),\n2:Disetujui  - Belum Terbit Sertifikat (Aksi : Lihat, Ajukan Sertifikat),\n3:Disetujui – Ajukan Sertifikat (Aksi : Lihat),\n4: Disetujui - Sudah Terbit Sertifikat (Aksi : Lihat),\n5: Ditolak (Aksi: Lihat)"
          },
          "jenis": {
            "type": "integer",
            "description": "1:Workshop,\n2:bimtek,\n3:pelatihan,\n4:sertifikasi jabatan fungsional,\n5:akreditasi,\n6:uji kompetensi naik jenjang,\n7:uji kompetensi perpindahan jabatan"
          },
          "deskripsi": {
            "type": "string"
          },
          "tgl_mulai": {
            "type": "string"
          },
          "tgl_selesai": {
            "type": "string"
          },
          "jabatan_jenjang": {
            "type": "string"
          },
          "data_tambahan": {
            "type": "string"
          },
          "tahun_diklat": {
            "type": "integer"
          },
          "durasi": {
            "type": "integer"
          },
          "instansi_penyelenggara": {
            "type": "string"
          },
          "no_usulan": {
            "type": "string"
          }
        }
      },
      "RequirementRevision": {
        "title": "RequirementRevision",
        "type": "object",
        "description": "This model represents an requirement deny request.",
        "properties": {
          "kebutuhan_id": {
            "type": "string"
          },
          "alasan_perbaikan": {
            "type": "string",
            "description": "the reason why the admission needs to be revised",
            "deprecated": true
          },
          "catatan_surat_pengantar": {
            "type": "string"
          },
          "catatan_dokumen_perhitungan": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "nama_file": {
                  "type": "string"
                },
                "catatan": {
                  "type": "string"
                }
              }
            }
          },
          "jumlah_kebutuhan": {
            "type": "array",
            "description": "This will update existing requirement counts, and will ignore invalid organization ID + count pair that was never submitted before.",
            "items": {
              "type": "object",
              "properties": {
                "unit_organisasi_id": {
                  "type": "string"
                },
                "rekomendasi_jumlah": {
                  "type": "integer"
                }
              }
            }
          }
        }
      },
      "ActivityAdmissionDetail": {
        "title": "ActivityAdmissionDetail",
        "type": "object",
        "description": "This model represents an activity admission data.",
        "properties": {
          "kegiatan_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "description": "1:Pengusulan (Aksi: Lihat),\n2:Disetujui  - Belum Terbit Sertifikat (Aksi : Lihat, Ajukan Sertifikat),\n3:Disetujui – Ajukan Sertifikat (Aksi : Lihat),\n4: Disetujui - Sudah Terbit Sertifikat (Aksi : Lihat),\n5: Ditolak (Aksi: Lihat)"
          },
          "jenis": {
            "type": "integer",
            "description": "1:Workshop,\n2:bimtek,\n3:pelatihan,\n4:sertifikasi jabatan fungsional,\n5:akreditasi,\n6:uji kompetensi naik jenjang,\n7:uji kompetensi perpindahan jabatan"
          },
          "deskripsi": {
            "type": "string"
          },
          "waktu_pengajuan": {
            "type": "integer"
          },
          "tgl_mulai": {
            "type": "string"
          },
          "tgl_selesai": {
            "type": "string"
          },
          "jabatan_jenjang": {
            "type": "string"
          },
          "data_tambahan": {
            "type": "string"
          },
          "peserta": {
            "$ref": "#/components/schemas/ActivityAttendee"
          },
          "dokumen_pendukung": {
            "$ref": "#/components/schemas/Document"
          },
          "tahun_diklat": {
            "type": "integer"
          },
          "durasi": {
            "type": "integer"
          },
          "instansi_penyelenggara": {
            "type": "string"
          },
          "no_usulan": {
            "type": "string"
          }
        }
      },
      "ActivityAttendee": {
        "title": "ActivityAttendee",
        "type": "object",
        "description": "Represents a single activity attendee state.",
        "properties": {
          "user_id": {
            "type": "string"
          },
          "nama": {
            "type": "string"
          },
          "penerimaan": {
            "type": "boolean"
          },
          "alasan_ditolak": {
            "type": "string"
          },
          "kelulusan": {
            "type": "boolean"
          },
          "alasan_tidak_lulus": {
            "type": "string"
          },
          "sertifikat": {
            "type": "object",
            "properties": {
              "no_surat": {
                "type": "string"
              },
              "tgl_surat": {
                "type": "string"
              },
              "ttd_user_id": {
                "type": "string"
              },
              "peserta_user_id": {
                "type": "string"
              },
              "jenis": {
                "type": "integer"
              },
              "nilai": {
                "type": "number"
              }
            }
          }
        }
      },
      "ActivityVerification": {
        "title": "ActivityVerification",
        "type": "object",
        "description": "ActivityVerification represents a single activity verification request.",
        "properties": {
          "kegiatan_id": {
            "type": "string"
          },
          "penerimaan_peserta": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityAttendee"
            }
          }
        }
      },
      "RequirementVerification": {
        "title": "RequirementVerification",
        "type": "object",
        "description": "RequirementVerification represents a single requirement verification request.",
        "properties": {
          "kebutuhan_id": {
            "type": "string"
          },
          "catatan_surat_pengantar": {
            "type": "string"
          },
          "catatan_dokumen_perhitungan": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "nama_file": {
                  "type": "string"
                },
                "catatan": {
                  "type": "string"
                }
              }
            }
          },
          "jumlah_kebutuhan": {
            "type": "array",
            "description": "This will update existing requirement counts, and will ignore invalid organization ID + count pair that was never submitted before.",
            "items": {
              "type": "object",
              "properties": {
                "unit_organisasi_id": {
                  "type": "string"
                },
                "rekomendasi_jumlah": {
                  "type": "integer"
                }
              }
            }
          }
        },
        "required": [
          "kebutuhan_id",
          "catatan_surat_pengantar"
        ]
      },
      "RequirementAdmissionResult": {
        "title": "RequirementAdmissionResult",
        "type": "object",
        "properties": {
          "kebutuhan_id": {
            "type": "string"
          },
          "tgl_usulan": {
            "type": "integer"
          },
          "status": {
            "type": "integer"
          },
          "jabatan_jenjang": {
            "type": "string"
          }
        }
      },
      "PositionGrade": {
        "title": "PositionGrade",
        "type": "object",
        "properties": {
          "jabatan_id": {
            "type": "string"
          },
          "nama_jabatan": {
            "type": "string"
          },
          "jumlah_pegawai": {
            "type": "string",
            "description": "The number of employee. Also called bezetting."
          }
        },
        "required": [
          "jabatan_id",
          "nama_jabatan"
        ],
        "description": ""
      },
      "RequirementVerifier": {
        "title": "RequirementVerifier",
        "type": "object",
        "properties": {
          "pejabat_id": {
            "type": "string"
          },
          "nama_pejabat": {
            "type": "string"
          }
        }
      },
      "RequirementAdmissionDetail": {
        "title": "RequirementAdmissionDetail",
        "type": "object",
        "description": "",
        "properties": {
          "kebutuhan_id": {
            "type": "string"
          },
          "tgl_usulan": {
            "type": "integer"
          },
          "status": {
            "type": "integer"
          },
          "jabatan_jenjang": {
            "type": "string"
          },
          "jumlah_kebutuhan": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequirementCount"
            }
          },
          "surat_pengantar": {
            "$ref": "#/components/schemas/Document"
          },
          "dokumen_perhitungan": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            }
          },
          "alasan_perbaikan": {
            "type": "string",
            "description": "Null/empty if status is not 3"
          },
          "surat_rekomendasi": {
            "$ref": "#/components/schemas/Document"
          },
          "tahun_anggaran": {
            "type": "string"
          },
          "no_usulan": {
            "type": "string"
          }
        },
        "required": [
          "kebutuhan_id",
          "tgl_usulan",
          "status",
          "jabatan_jenjang",
          "jumlah_kebutuhan",
          "surat_pengantar",
          "tahun_anggaran",
          "no_usulan"
        ]
      },
      "ASN": {
        "title": "ASN",
        "type": "object",
        "description": "The ASN own detail, now generalized for use by JF, IDIS, Teken Digital, and more.",
        "properties": {
          "asn_id": {
            "type": "string"
          },
          "nip_baru": {
            "type": "string"
          },
          "nip_lama": {
            "type": "string"
          },
          "nama": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "nik": {
            "type": "string"
          },
          "no_hp": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "instansi_induk_id": {
            "type": "string"
          },
          "instansi_induk_nama": {
            "type": "string"
          },
          "instansi_kerja_id": {
            "type": "string"
          },
          "instansi_kerja_nama": {
            "type": "string"
          },
          "jabatan_fungsional_id": {
            "type": "string"
          },
          "jabatan_fungsional_umum_id": {
            "type": "string"
          },
          "jabatan": {
            "type": "string"
          },
          "unit_organisasi": {
            "type": "string"
          }
        }
      },
      "Document": {
        "title": "Document",
        "type": "object",
        "description": "This is the metadata of document such PDF stored in the object storage.",
        "properties": {
          "nama_file": {
            "type": "string",
            "description": "The document filename that was generated for uploading. In the case of submitting this document, the document filename must have been successfully uploaded before, otherwise this endpoint will return an error."
          },
          "nama_dokumen": {
            "type": "string",
            "description": "The human-readable name of the document"
          },
          "no_dokumen": {
            "type": "string",
            "description": "The document's registered number"
          },
          "tgl_dokumen": {
            "type": "string",
            "description": "When the document published"
          },
          "catatan": {
            "type": "string",
            "description": "Can optionally be submitted in some endpoints"
          },
          "ttd_user_id": {
            "type": "string",
            "description": "The user ID that will sign this document"
          }
        }
      },
      "DismissalAdmission": {
        "title": "DismissalAdmission",
        "type": "object",
        "description": "A dismissal request.",
        "properties": {
          "pemberhentian_id": {
            "type": "string"
          },
          "asn_id": {
            "type": "string"
          },
          "nama": {
            "type": "string"
          },
          "nip": {
            "type": "string"
          },
          "dokumen_pendukung": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "filename": {
                  "type": "string"
                },
                "nama_dokumen": {
                  "type": "string"
                }
              }
            }
          },
          "alasan_pemberhentian": {
            "type": "string"
          },
          "surat_pemberhentian": {
            "$ref": "#/components/schemas/Document"
          },
          "pejabat_penandatangan_surat_pemberhentian": {
            "type": "string"
          },
          "alasan_tidak_diberhentikan": {
            "type": "string"
          },
          "dokumen_pendukung_tidak_diberhentikan": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "filename": {
                  "type": "string"
                }
              }
            }
          },
          "status": {
            "type": "integer"
          },
          "status_ts": {
            "type": "integer"
          },
          "status_by": {
            "type": "string"
          },
          "tgl_sk": {
            "type": "string"
          },
          "nomor_sk": {
            "type": "string"
          },
          "detail_alasan": {
            "type": "string"
          },
          "no_usulan": {
            "type": "string"
          }
        },
        "required": [
          "pemberhentian_id",
          "asn_id",
          "dokumen_pendukung",
          "status",
          "status_ts",
          "status_by",
          "no_usulan"
        ]
      },
      "PromotionCpnsAdmissionDetail": {
        "title": "PromotionAdmissionDetail",
        "type": "object",
        "description": "This model represents a CPNS promotion admission data.",
        "properties": {
          "pengangkatan_cpns_id": {
            "type": "string"
          },
          "asn_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "nip": {
            "type": "string"
          },
          "status": {
            "type": "integer"
          },
          "jabatan_fungsional_tujuan_id": {
            "type": "string"
          },
          "angka_kredit_pertama": {
            "type": "integer"
          },
          "unor_id": {
            "type": "string"
          },
          "unor": {
            "type": "string"
          },
          "surat_pak": {
            "$ref": "#/components/schemas/Document"
          },
          "surat_pengangkatan": {
            "$ref": "#/components/schemas/Document"
          },
          "nomor_usulan": {
            "type": "string"
          },
          "tgl_usulan": {
            "type": "string"
          }
        }
      },
      "RequirementCount": {
        "title": "RequirementCount",
        "type": "object",
        "description": "A generic requirement count payload.",
        "properties": {
          "unit_organisasi_id": {
            "type": "string",
            "description": "Must be found in the work agency"
          },
          "unit_organisasi": {
            "type": "string",
            "description": "Can be left empty for submission"
          },
          "jumlah": {
            "type": "integer",
            "description": "Must be > 0 when submitted"
          },
          "rekomendasi_jumlah": {
            "type": "integer"
          }
        },
        "required": [
          "unit_organisasi_id",
          "jumlah"
        ]
      },
      "PaginatedListMetadata": {
        "title": "PaginatedListMetadata",
        "type": "object",
        "properties": {
          "subtotal": {
            "type": "integer",
            "description": "Total result length returned"
          },
          "total": {
            "type": "integer",
            "description": "Can be -1 if unknown"
          },
          "total_halaman": {
            "type": "integer",
            "description": "Can be -1 if unknown"
          },
          "halaman": {
            "type": "integer",
            "description": "The current page number"
          },
          "halaman_berikutnya": {
            "type": "boolean",
            "description": "True if there is a next page, false otherwise"
          }
        },
        "required": [
          "subtotal",
          "total",
          "total_halaman",
          "halaman",
          "halaman_berikutnya"
        ]
      },
      "StatisticStatus": {
        "title": "StatisticStatus",
        "type": "object",
        "properties": {
          "status": {
            "type": "integer"
          },
          "jumlah": {
            "type": "integer"
          }
        },
        "required": [
          "status",
          "jumlah"
        ],
        "description": ""
      },
      "AssessmentTeam": {
        "title": "AssessmentTeam",
        "type": "object",
        "description": "",
        "properties": {
          "tim_penilaian_id": {
            "type": "string"
          },
          "no_usulan": {
            "type": "string"
          },
          "jabatan_fungsional_id": {
            "type": "string"
          },
          "jabatan_fungsional": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "enum": [
              1,
              2
            ],
            "description": "1-Created, 2-Verified"
          },
          "instansi_id": {
            "type": "string"
          },
          "instansi": {
            "type": "string"
          },
          "tgl_usulan": {
            "type": "string"
          },
          "penilai": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "asn_id": {
                  "type": "string"
                },
                "nip": {
                  "type": "string"
                },
                "nama": {
                  "type": "string"
                },
                "peran": {
                  "type": "integer",
                  "enum": [
                    1,
                    2,
                    3
                  ],
                  "description": "1-Ketua, 2-Wakil Ketua, 3-Anggota"
                },
                "status": {
                  "type": "integer",
                  "enum": [
                    0,
                    1,
                    2
                  ],
                  "description": "0-Belum Diverifikasi, 1-Diterima, 2-Ditolak"
                }
              }
            }
          },
          "dokumen_pendukung": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            }
          },
          "surat_rekomendasi": {
            "$ref": "#/components/schemas/Document"
          }
        }
      },
      "AssessmentTeamItem": {
        "title": "AssessmentTeamItem",
        "type": "object",
        "description": "",
        "properties": {
          "tim_penilaian_id": {
            "type": "string"
          },
          "no_usulan": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "enum": [
              1,
              2
            ],
            "description": "1-Created, 2-Verified"
          },
          "instansi_id": {
            "type": "string"
          },
          "instansi": {
            "type": "string"
          },
          "tgl_usulan": {
            "type": "string"
          }
        }
      },
      "AssessmentTeamAdmission": {
        "title": "AssessmentTeamAdmission",
        "type": "object",
        "properties": {
          "no_usulan": {
            "type": "string"
          },
          "jabatan_fungsional_id": {
            "type": "string"
          },
          "tgl_usulan": {
            "type": "string"
          },
          "penilai": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "asn_id": {
                  "type": "string"
                },
                "peran": {
                  "type": "integer",
                  "enum": [
                    1,
                    2,
                    3
                  ],
                  "description": "1-Ketua, 2-Wakil Ketua, 3-Anggota"
                }
              }
            }
          },
          "temp_dokumen_pendukung": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            }
          }
        }
      },
      "AssessmentTeamVerification": {
        "title": "AssessmentTeamVerification",
        "type": "object",
        "properties": {
          "tim_penilaian_id": {
            "type": "string"
          },
          "penilai": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "asn_id": {
                  "type": "string"
                },
                "status": {
                  "type": "integer",
                  "enum": [
                    1,
                    2
                  ],
                  "description": "1-Diterima, 2-Ditolak"
                },
                "alasan_ditolak": {
                  "type": "string"
                }
              }
            }
          },
          "temp_surat_rekomendasi": {
            "$ref": "#/components/schemas/Document"
          }
        }
      }
    },
    "parameters": {
      "kebutuhan_id": {
        "name": "kebutuhan_id",
        "in": "query",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "This is the requirement admission id."
      },
      "jabatan_id": {
        "name": "jabatan_id",
        "in": "query",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The id of a position grade."
      },
      "halaman": {
        "name": "halaman",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "default": "1"
        },
        "description": "Page number"
      },
      "jumlah_per_halaman": {
        "name": "jumlah_per_halaman",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "default": "10"
        },
        "description": "Count per page"
      },
      "pengangkatan_cpns_id": {
        "name": "pengangkatan_cpns_id",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "The promotion admission ID for CPNS."
      }
    }
  },
  "tags": [
    {
      "name": "activity"
    },
    {
      "name": "dismissal"
    },
    {
      "name": "promotion"
    },
    {
      "name": "promotion-cpns"
    },
    {
      "name": "requirement"
    }
  ]
}